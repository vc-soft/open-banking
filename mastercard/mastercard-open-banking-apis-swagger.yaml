openapi: 3.0.3
info:
  title: Mastercard Open Banking APIs
  description: >-
    OpenAPI specification for Mastercard Open Banking APIs (Australia)


    [![](https://mstr.cd/320oUJL)](https://developer.mastercard.com)
  contact:
    name: API Support
    email: apisupport@mastercard.com
    url: 'https://developer.mastercard.com/support'
  version: 1.10.1
servers:
  - url: 'https://api.openbanking.mastercard.com.au'
    description: Mastercard Open Banking Australia
tags:
  - name: Accounts
    description: Fetch or refresh customer accounts
  - name: Application Registration
    description: APIs to manage partner’s applications
  - name: Authentication
    description: Generate authentication tokens and manage credentials
  - name: Connect 🔗
    description:
      Allow customers to log into their financial institutions and grant
      Mastercard Open Banking authorization
  - name: Consumers
    description:
      Create and manage consumers associated with customers in order to use
      report services
  - name: Customers
    description: Enroll and manage customers
  - name: Institutions
    description: Search and fetch financial institutions
  - name: Payments
    description: Fetch money transfer details and account balances
  - name: 'Report Generation: Cash Flow'
    description: Generate cash flow reports asynchronously
  - name: 'Report Generation: Verify Assets'
    description: Generate asset reports asynchronously
  - name: 'Report Generation: Verify Income'
    description: Generate income reports asynchronously
  - name: Reports
    description: Fetch generated reports when ready
  - name: Transactions
    description:
      Fetch customer and account transactions and generate reports
      asynchronously
  - name: Webhook Notifications
    description: Manage webhook notification subscriptions
  - name: App Registration
    description: Register and assign apps to customers
security:
  - AppKey: []
  - AppToken: []
paths:
  /aggregation/v2/partners/authentication:
    post:
      tags:
        - Authentication
      summary: Create Access Token
      description: >-
        Send Partner ID and Partner Secret to the Partner Authentication service
        to obtain a token for accessing Mastercard Open Banking APIs.

        * The token is valid for two hours and is required on all calls to the
        Mastercard Open Banking APIs

        * As a best practice, use a single token for all calls. Assign a
        timestamp for each token, and then check the current timestamp before
        making any calls. If the token is greater than 90 minutes, generate a
        new one.

        * ⚠️ After five failed attempts to authenticate, your account will be
        locked. Contact
        [apisupport@mastercard.com](mailto:apisupport@mastercard.com) to get
        help resetting your account.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: CreateToken
      requestBody:
        $ref: '#/components/requestBodies/CreateTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/AuthenticationUnauthorizedErrorResponse'
      security:
        - AppKey: []
  /connect/v2/generate:
    post:
      tags:
        - Connect 🔗
      summary: Generate Connect URL
      description: >-
        Generate a Connect 2.0 URL link to add within your own applications.


        Use the `experience` parameter to call Connect (per session) in the body
        of the request. Configure the `experience` parameter to change the brand
        color, logo, icon, which credit decisioning report to generate when the
        Connect application completes, and more.


        Note: contact your Sales Account Team to set up the `experience`
        parameter.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GenerateConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/consent/manage:
    post:
      tags:
        - Connect 🔗
      summary: Generate Connect Dashboard URL
      operationId: GenerateConnectDashboardUrl
      description: >-
        Generate a Connect Dashboard URL link to manage consents within your own
        applications.


        Use the `experience` parameter to call Connect (per session) in the body
        of the request. Configure the `experience` parameter to change the brand
        color, logo, icon, which credit decisioning report to generate when the
        Connect application completes, and more.


        Note: contact your Sales Account Team to set up the `experience`
        parameter.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      requestBody:
        $ref: '#/components/requestBodies/GenerateConnectDashboardUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectDashboardUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/lite:
    post:
      tags:
        - Connect 🔗
      summary: Generate Lite Connect URL
      description: >-
        Connect Lite is a minimalistic implementation of the Connect Full
        experience, providing a limited  set of features. Connect Lite is a
        useful option if you want to handle the selection of Financial
        Institution and Account(s) in your own user experience.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GenerateConnectLiteUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateConnectLiteUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /aggregation/v2/customers/testing:
    post:
      tags:
        - Customers
      summary: Add Testing Customer
      description: >-
        Enroll a testing customer ([Test
        Drive](https://developer.mastercard.com/open-banking-au/documentation/quick-start-guide/)
        accounts).


        Testing customers should be assigned to test OAuth applications. This
        should add accounts to Finbank OAuth for OAuth implementation.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: AddTestingCustomer
      requestBody:
        $ref: '#/components/requestBodies/AddTestingCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/AddCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /aggregation/v2/customers/active:
    post:
      tags:
        - Customers
      summary: Add Customer
      description: >-
        Enroll an active customer, which is the actual owner of one or more
        real-world accounts. This is a billable customer.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: AddCustomer
      requestBody:
        $ref: '#/components/requestBodies/AddCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/AddCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  /aggregation/v1/customers:
    get:
      tags:
        - Customers
      summary: Get Customers
      description: >-
        Find all customers enrolled by the current partner, where the search
        text is found in the customer's username or any combination of
        `firstName` and `lastName` fields. If no search text is provided, all
        customers will be returned.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomers
      parameters:
        - $ref: '#/components/parameters/CustomerUsernameParameter'
        - $ref: '#/components/parameters/CustomerTypeParameter'
        - $ref: '#/components/parameters/CustomerSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomersResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/aggregation/v1/customers/{customerId}/application':
    get:
      tags:
        - Customers
      summary: Get Customer With App Data by ID
      description: >-
        Retrieve a customer along with additional details about the OAuth
        application.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomerWithAppData
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerWithAppDataResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}':
    get:
      tags:
        - Customers
      summary: Get Customer by ID
      description: >-
        Retrieve a customer by ID.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    put:
      tags:
        - Customers
      summary: Modify Customer by ID
      description: >-
        Modify an enrolled customer by ID.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: ModifyCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyCustomerRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    delete:
      tags:
        - Customers
      summary: Delete Customer by ID
      description: >-
        Completely remove a customer from the system. This will remove the
        customer and all associated accounts and transactions.


        ⚠️ Use this service carefully! It will not pause for confirmation before
        performing the operation!


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: DeleteCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteCustomerResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/consumer':
    post:
      tags:
        - Consumers
      summary: Create Consumer
      description: >-
        Create a consumer record associated with the given customer. A consumer
        persists as the owner of any reports that are generated, even after the
        original customer is deleted from the system.


        A consumer must be created for the given customer before calling any of
        the "Generate Report" services.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: CreateConsumer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/CreateConsumerRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '409':
          $ref: '#/components/responses/ConflictErrorResponse'
    get:
      tags:
        - Consumers
      summary: Get Consumer For Customer
      description: >-
        Get the details of a consumer record by customer ID.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetConsumerForCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerForCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/consumers/{consumerId}':
    get:
      tags:
        - Consumers
      summary: Get Consumer by ID
      description: >-
        Get the details of a consumer record by consumer ID.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    put:
      tags:
        - Consumers
      summary: Update Consumer by ID
      description: >-
        Modify an existing consumer. All fields are required for a consumer
        record, but individual fields for this call are optional because fields
        that are not specified will be left unchanged.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: ModifyConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyConsumerRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts by Institution Login ID
      description: >-
        Get all accounts associated with the given institution login. All
        accounts returned are accessible by a single set of credentials on a
        single institution.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    post:
      tags:
        - Accounts
      summary: Refresh Customer Accounts by Institution Login ID
      description: >-
        Refresh account and transaction data for all accounts associated with a
        given `institutionLoginId` with a connection to the institution.


        Client apps are not permitted to automate calls to the "Refresh"
        services. Active accounts are automatically refreshed by Mastercard Open
        Banking once per day. Because many financial institutions only post
        transactions once per day, calling Refresh repeatedly is usually a waste
        of resources and is not recommended.


        Apps may call "Refresh" services for a specific customer when there is a
        specific business case for the need of data that is up to date as of the
        moment. Please discuss with your account manager and systems engineer
        for further clarification.


        The recommended timeout setting for this request is 120 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: RefreshCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/RefreshCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}':
    get:
      tags:
        - Accounts
      summary: Get Customer Account by ID
      description: >-
        Get a customer account by ID.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts
      description: >-
        Get all accounts owned by the given customer.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomerAccounts
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountStatusParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutions/{institutionId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts by Institution ID
      description: >-
        Get all active accounts owned by the given customer at the given
        institution.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomerAccountsByInstitution
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/transactions/historic':
    post:
      tags:
        - Transactions
      summary: Load Historic Transactions for Customer Account
      description: >-
        Connect to the account's financial institution and load up to 12 months
        of historic transactions for the account. Length of history varies by
        institution.


        This is a premium service. The billable event is a call to this service
        specifying a customer ID that has not been seen before by this service.
        (If this service is called multiple times with the same customer ID, to
        load transactions from multiple accounts, only one billable event has
        occurred.)


        The recommended timeout setting for this request is 180 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.


        The date range sent to the institution is calculated from the account's
        `createdDate`. This means that calling this service a second time for
        the same account normally will not add any new transactions for the
        account. For this reason, a second call to this service for a known
        account ID will usually return immediately.


        In a few specific scenarios, it may be desirable to force a second
        connection to the institution for a known account ID. Some examples are:


        * The institution's policy has changed, making more transactions
        available

        * Mastercard Open Banking has now added a longer transaction history
        support for the institution

        * The first call encountered an error, and the resulting Aggregation
        Ticket has now been fixed by the Mastercard Open Banking Support Team


        In these cases, the POST request can contain the parameter `force=true`
        in the request body to force the second connection.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: LoadHistoricTransactionsForCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '204':
          $ref: '#/components/responses/LoadHistoricTransactionsForCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/accounts/{accountId}/owner':
    get:
      tags:
        - Accounts
      summary: Get Account Owner
      description: >-
        Retrieve the names and addresses of the account owner from a financial
        institution.


        Note: this is a premium service, billable per every successful API call.


        This service retrieves account data from the institution. This usually
        returns quickly, but in some scenarios may take a few minutes to
        complete. In the event of a timeout condition, retry the call.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetAccountOwner
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountOwnerResponse'
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /aggregation/v2/partners/applications:
    get:
      tags:
        - App Registration
      summary: Get App Registration Status
      description: >-
        Get the status of your application registration(s).


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetAppRegistrationStatus
      parameters:
        - $ref: '#/components/parameters/ApplicationIdQueryParameter'
        - $ref: '#/components/parameters/AppRegistrationStatusParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/ResultPageParameter'
        - $ref: '#/components/parameters/ResultPageSizeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAppRegistrationStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /institution/v2/institutions:
    get:
      tags:
        - Institutions
      summary: Get Institutions
      description: >-
        Search for financial institutions.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetInstitutions
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /institution/v2/certifiedInstitutions:
    get:
      tags:
        - Institutions
      summary: 'Get Certified Institutions'
      description: >-
        Search for financial institutions by certified product.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCertifiedInstitutions
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCertifiedInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/institution/v2/institutions/{institutionId}':
    get:
      tags:
        - Institutions
      summary: Get Institution by ID
      description: >-
        Get financial institution details by ID.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetInstitution
      parameters:
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/institution/v2/institutions/{institutionId}/branding':
    get:
      tags:
        - Institutions
      summary: Get Institution Branding by ID
      description: >-
        Return the branding information for a financial institution.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetInstitutionBranding
      parameters:
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionBrandingResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voa':
    post:
      tags:
        - 'Report Generation: Verify Assets'
      summary: Generate VOA Report
      description: >-
        Generate a Verification of Assets (VOA) report for all transaction &
        savings, money market and investment accounts for the given customer.
        This service retrieves up to six months of transaction history for each
        account and uses this information to generate the VOA report.


        This is a premium service. The billing rate is the variable rate for
        Verification of Assets under the current subscription plan. The billable
        event is the successful generation of a VOA report.


        A report consumer must be created for the given customer before calling
        this API (see "Consumers").


        If no account is found for type checking, savings, money market, or
        investment, the service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GenerateVOAReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponseVoa'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voi':
    post:
      tags:
        - 'Report Generation: Verify Income'
      summary: Generate VOI Report
      description: >-
        Generate a Verification of Income (VOI) report for all
        checking/transaction, savings, and money market accounts for the given
        customer. This service retrieves up to 12 months of transaction history
        for each account and uses this information to generate the VOI report.


        This is a premium service. The billing rate is the variable rate for
        Verification of Income under the current subscription plan. The billable
        event is the successful generation of a VOI report.


        If no account of type checking/transaction, savings, or money market is
        found, the service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GenerateVOIReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponseVoi'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/transactions':
    get:
      tags:
        - Transactions
      summary: Get All Customer Transactions
      description: >-
        Get all transactions available for this customer within the given date
        range, across all accounts. This service supports paging and sorting by
        `transactionDate` (or `postedDate` if no transaction date is provided),
        with a maximum of 1000 transactions per request.


        Standard consumer aggregation provides up to 180 days of transactions
        prior to the date each account was added to the Mastercard Open Banking
        system. To access older transactions, you must first call the service
        Load Historic Transactions for Account.


        There is no limit for the size of the window between `fromDate` and
        `toDate`, however, the maximum number of transactions returned on one
        page is 1000.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetAllCustomerTransactions
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/RequiredFromDateParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/transactions/{transactionId}':
    get:
      tags:
        - Transactions
      summary: Get Customer Transaction by ID
      description: >-
        Get details for the given transaction.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomerTransaction
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/TransactionIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/accounts/{accountId}/transactions':
    get:
      tags:
        - Transactions
      summary: Get Customer Account Transactions
      description: >-
        Get all transactions available for this customer account within the
        given date range. This service supports paging and sorting by
        `transactionDate` (or `postedDate` if no transaction date is provided),
        with a maximum of 1000 transactions per request.


        Standard consumer aggregation provides up to 180 days of transactions
        prior to the date each account was added to the Mastercard Open Banking
        system. To access older transactions, you must first call the Cash Flow
        Verification service Load Historic Transactions for Account.


        There is no limit for the size of the window between `fromDate` and
        `toDate`, however, the maximum number of transactions returned on one
        page is 1000.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetCustomerAccountTransactions
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/RequiredFromDateParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/accounts/{accountId}/details':
    get:
      tags:
        - Payments
      summary: Get Money Transfer Details
      description: >-
        Return the account number and bank routing number details based on
        market.


        Note: this is a premium service, billable per every successful API call.


        _Supported account types_: "transaction", "savings"


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetMoneyTransferDetails
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetMoneyTransferDetailsResponse'
        '400':
          $ref: '#/components/responses/GetMoneyTransferDetailsBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v4/customers/{customerId}/reports/{reportId}':
    get:
      tags:
        - Reports
      summary: Get Report by Customer Id and report Id
      description: >-
        Get a report that has been generated by calling one of the "Generate
        Report" services.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.


        Report data can either be retrieved as a JSON document or a PDF file. To
        specify the format required, set the _Accept request header_ to either
        **application/json** or **application/pdf**. If neither is set, the
        report format will be returned as a JSON document.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetReportByCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/reports':
    get:
      tags:
        - Reports
      summary: Get Reports by Customer
      description: >-
        Get all reports that have been generated by calling one of the "Generate
        Report" services for the given customer.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetReportsByCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetReportsByCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  '/decisioning/v1/consumers/{consumerId}/reports':
    get:
      tags:
        - Reports
      summary: Get Reports by Consumer
      description: >-
        Get a report that has been generated by calling one of the "Generate
        Report" services.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetReportsByConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetReportsByConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  '/decisioning/v4/consumers/{consumerId}/reports/{reportId}':
    get:
      tags:
        - Reports
      summary: Get Report by Consumer and ID
      description: >-
        Get a report that has been generated by calling one of the "Generate
        Report" services.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.


        Report data can either be retrieved as a JSON document or a PDF file. To
        specify the format required, set the _Accept request header_ to either
        **application/json** or **application/pdf**. If neither is set, the
        report format will be returned as a JSON document.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetReportByConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
        - $ref: '#/components/parameters/ReportIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance/live':
    get:
      tags:
        - Payments
      summary: Get Available Balance - Live
      description: >-
        Retrieve the available and cleared account balances for a single account
        in real-time directly from a financial institution.


        Note: this is a premium service, billable per every successful API call.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetAvailableBalanceLive
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetAvailableBalanceLiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance':
    get:
      tags:
        - Payments
      summary: Get Available Balance
      description: >-
        Retrieve the latest cached available and cleared account balances for a
        customer. Since we update and store balances throughout the day, this is
        the most accurate balance information available when a connection to a
        financial institution is unavailable or when a faster response is
        needed.


        Note: this is a premium service, billable per every successful API call.
        Enrollment is required.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetAvailableBalance
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/GetAvailableBalanceResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/cashFlowBusiness':
    post:
      tags:
        - 'Report Generation: Cash Flow'
      summary: Generate Cash Flow Report - Business
      description: >-
        Generate a Cash Flow Report (Business) report for all
        checking/transaction and savings under the given customer. This service
        retrieves up to 12 months of transaction history for the given account.
        It then uses this information to generate the CFR report. A consumer is
        not required to generate this report.


        If no account of type checking/transaction or savings is found, the
        service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GenerateCashFlowBusinessReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/ConsentReceiptIdHeader'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponseCfrb'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/notifications/webhooks/subscriptions':
    post:
      tags:
        - Webhook Notifications
      summary: Create Subscription For Webhook Notification.
      description: >-
        Subscribe to webhook notification by providing subscription details.


        Upon successful subscription, webhook notification will be delivered on
        provided URL.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: CreateWebhookSubscription
      requestBody:
        $ref: '#/components/requestBodies/CreateWebhookSubscriptionRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateWebhookSubscriptionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
    get:
      tags:
        - Webhook Notifications
      summary: Get All Subscriptions For Webhook Notification.
      description: >-
        Get all webhook notification subscriptions. By default it will return
        all subscriptions. You can filter specific subscription using status
        value.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetWebhookSubscriptions
      parameters:
        - $ref: '#/components/parameters/WebhookSubscriptionStatusParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAllWebhookSubscriptionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/notifications/webhooks/subscriptions/{subscription_id}':
    get:
      tags:
        - Webhook Notifications
      summary: Get Subscription For Webhook Notification.
      description: >-
        Get the subscription details by webhook notification subscription ID


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: GetWebhookSubscription
      parameters:
        - $ref: '#/components/parameters/WebhookSubscriptionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetWebhookSubscriptionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/notifications/webhooks/subscriptions/{subscription_id}/url':
    put:
      tags:
        - Webhook Notifications
      summary: Update Subscription URL For Webhook Notification.
      description: >-
        Update subscription by providing new subscription details.


        Upon successful subscription update, webhook notification will be
        delivered on updated URL.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: updateWebhookSubscription
      parameters:
        - $ref: '#/components/parameters/WebhookSubscriptionIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/UpdateWebhookSubscriptionRequest'
      responses:
        '204':
          description: Subscription successfully updated.
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /applications:
    get:
      tags:
        - Application Registration
      summary: Get applications details
      description: >-
        Get the status of the submitted application(s) as well as additional
        details associated with it.



        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: getApplications
      parameters:
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/ApplicationLimitParameter'
        - $ref: '#/components/parameters/ApplicationIdParameter'
        - $ref: '#/components/parameters/AppNameParameter'
        - $ref: '#/components/parameters/AppStatusParameter'
      responses:
        '200':
          $ref: '#/components/responses/AppResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    post:
      tags:
        - Application Registration
      summary: Submit application
      description: >-
        Submit a registration request for a new application to access financial
        institutions.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: RegisterApp
      requestBody:
        $ref: '#/components/requestBodies/RegisterAppRequest'
      responses:
        '201':
          $ref: '#/components/responses/RegisterAppResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /applications/{application_id}:
    put:
      tags:
        - Application Registration
      summary: Modify application
      description: >-
        Update details of a submitted application.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: ModifyApp
      parameters:
        - $ref: '#/components/parameters/AppIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyAppRequest'
      responses:
        '200':
          $ref: '#/components/responses/ModifyAppRegistrationResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /applications/{application_id}/institutions:
    get:
      tags:
        - Application Registration
      summary: Get institutions activation status
      description: >-
        Get the status of the application registration with the financial
        institutions. The status is available only if the application is
        approved.


        _Supported regions_: ![🇦🇺](https://flagcdn.com/20x15/au.png)
      operationId: getRegisteredInstitutions
      parameters:
        - $ref: '#/components/parameters/AppIdPathParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/InstitutionLimitParameter'
        - $ref: '#/components/parameters/InstitutionIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/InstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
components:
  securitySchemes:
    AppKey:
      name: App-Key
      type: apiKey
      in: header
      description: The "App-Key" from the developer dashboard
    AppToken:
      name: App-Token
      type: apiKey
      in: header
      description: A token returned by the `/authentication` endpoint
  requestBodies:
    CreateTokenRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartnerCredentials'
    GenerateConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectParameters'
    GenerateConnectDashboardUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectDashboardParameters'
    GenerateConnectLiteUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectLiteParameters'
    AddCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewCustomer'
    AddTestingCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewTestingCustomer'
    ModifyCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerUpdate'
    CreateConsumerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewConsumer'
    ModifyConsumerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerUpdate'
    GenerateReportRequest:
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportConstraints'
    CreateWebhookSubscriptionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewSubscription'
    UpdateWebhookSubscriptionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionUrl'
    RegisterAppRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    ModifyAppRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
  responses:
    CreateTokenResponse:
      description: The access token was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessToken'
    GenerateConnectUrlResponse:
      description: The URL link was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectUrl'
    GenerateConnectDashboardUrlResponse:
      description: The URL link was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectUrl'
    AddCustomerResponse:
      description: The customer was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedCustomer'
    GetCustomersResponse:
      description: Customers were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customers'
    GetCustomerResponse:
      description: The customer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    GetCustomerWithAppDataResponse:
      description: The customer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerWithAppData'
    ModifyCustomerResponse:
      description: The customer was successfully updated
    DeleteCustomerResponse:
      description: The customer was successfully deleted
    CreateConsumerResponse:
      description: The consumer was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedConsumer'
    GetConsumerForCustomerResponse:
      description: The consumer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consumer'
    GetConsumerResponse:
      description: The consumer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consumer'
    ModifyConsumerResponse:
      description: The consumer was successfully updated
    GetCustomerAccountsResponse:
      description: The account list was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
          examples:
            CustomerAccountsResponseExample:
              $ref: '#/components/examples/CustomerAccountsResponseExample'
    RefreshCustomerAccountsResponse:
      description: The account list was successfully refreshed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
          examples:
            CustomerAccountsResponseExample:
              $ref: '#/components/examples/CustomerAccountsResponseExample'
    LoadHistoricTransactionsForCustomerAccountResponse:
      description:
        Historic transactions have been loaded successfully. The transactions
        are now available by calling "Get Customer Account Transactions".
    GetCustomerAccountResponse:
      description: The account was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccount'
          examples:
            CustomerAccountResponseExample:
              $ref: '#/components/examples/CustomerAccountResponseExample'
    GetAccountOwnerResponse:
      description: The account owner was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountOwnerHolder'
          examples:
            AccountOwnerResponseExample:
              $ref: '#/components/examples/AccountOwnerResponseExample'
    MFAChallengeNeededResponse:
      description:
        The response contains an MFA challenge in XML or JSON format. Contact
        your Account Manager or Systems Engineers to determine the best route to
        handle this error.
    GetAppRegistrationStatusResponse:
      description: The app registration statuses were returned
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppStatuses'
    GetCertifiedInstitutionsResponse:
      description: Institutions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertifiedInstitutions'
    GetInstitutionResponse:
      description: Institution was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstitutionWrapper'
    GetInstitutionsResponse:
      description: Institutions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Institutions'
    GetInstitutionBrandingResponse:
      description: Institution branding was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandingWrapper'
    GenerateReportResponseVoa:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportData'
          examples:
            ReportDataVoa:
              $ref: '#/components/examples/ReportDataVoaExample'
    GenerateReportResponseVoi:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportData'
          examples:
            ReportDataVoi:
              $ref: '#/components/examples/ReportDataVoiExample'
    GenerateReportResponseCfrb:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportDataNonCRA'
          examples:
            ReportDataCfrb:
              $ref: '#/components/examples/ReportDataCfrbExample'
    GetReportResponse:
      description: The report was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Report'
          examples:
            VOAReportExample:
              $ref: '#/components/examples/VOAReportExample'
            VOIReportExample:
              $ref: '#/components/examples/VOIReportExample'
            CashFlowBusinessReportExample:
              $ref: '#/components/examples/CashFlowBusinessReportExample'
    GetReportsByCustomerResponse:
      description: The reports summaries were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportSummaries'
    GetReportsByConsumerResponse:
      description: The reports summaries were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportSummaries'
    GetCustomerTransactionsResponse:
      description: The transactions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transactions'
          examples:
            TransactionsByAccountIdExample:
              $ref: '#/components/examples/TransactionsByAccountsExample'
    GetCustomerTransactionResponse:
      description: The transaction was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transaction'
          examples:
            TransactionsByAccountIdExample:
              $ref: '#/components/examples/TransactionByAccountIdExample'
    GetMoneyTransferDetailsResponse:
      description: Account Money Transfer details were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInstructions'
    GetAvailableBalanceResponse:
      description: The balance was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailableBalance'
    GetAvailableBalanceLiveResponse:
      description: The live balance was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailableBalance'
          examples:
            AvailablebalanceLiveByAccountIdResponseExample:
              $ref: '#/components/examples/AvailablebalanceLiveByAccountIdResponseExample'
    AuthenticationUnauthorizedErrorResponse:
      description: >-
        The request lacks valid authentication credentials. Check Partner ID,
        Partner Secret or App-Key.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingAppKeyExample:
              $ref: '#/components/examples/MissingAppKeyExample'
            InvalidCredentialsExample:
              $ref: '#/components/examples/InvalidCredentialsExample'
    UnauthorizedErrorResponse:
      description: >-
        The request lacks valid authentication credentials. Check "App-Key" or
        "App-Token".
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ExpiredTokenExample:
              $ref: '#/components/examples/ExpiredTokenExample'
            MissingAppKeyExample:
              $ref: '#/components/examples/MissingAppKeyExample'
    BadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFieldExample:
              $ref: '#/components/examples/MissingFieldExample'
            InvalidFieldExample:
              $ref: '#/components/examples/InvalidFieldExample'
            InvalidExperienceFieldExample:
              $ref: '#/components/examples/InvalidExperienceFieldExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
    GetMoneyTransferDetailsBadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFieldExample:
              $ref: '#/components/examples/MissingFieldExample'
            InvalidFieldExample:
              $ref: '#/components/examples/InvalidFieldExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
            AccountTypeNotSupportedExample:
              $ref: '#/components/examples/AccountTypeNotSupportedExample'
    TooManyRequestsErrorResponse:
      description:
        The service can't accept more requests or is not available from the
        [Test
        Drive](https://developer.mastercard.com/open-banking-au/documentation/quick-start-guide/).
    ResourceNotFoundErrorResponse:
      description: The resource doesn't exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ConsumerNotFoundExample:
              $ref: '#/components/examples/ConsumerNotFoundExample'
            NoAccountForInstitutionLoginIdExample:
              $ref: '#/components/examples/NoAccountForInstitutionLoginIdExample'
            CustomerNotFoundExample:
              $ref: '#/components/examples/CustomerNotFoundExample'
            NoConsumerForCustomerExample:
              $ref: '#/components/examples/NoConsumerForCustomerExample'
            ResourceNotFoundExample:
              $ref: '#/components/examples/ResourceNotFoundExample'
            NoRegisteredApplicationExample:
              $ref: '#/components/examples/NoRegisteredApplicationExample'
    ConflictErrorResponse:
      description: The resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ConsumerExistsConflictExample:
              $ref: '#/components/examples/ConsumerExistsConflictExample'
    CreateWebhookSubscriptionResponse:
      description: The subscription was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Subscription'
    GetAllWebhookSubscriptionResponse:
      description: All subscriptions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Subscriptions'
    GetWebhookSubscriptionResponse:
      description: The subscription was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionSummary'
    AppResponse:
      description: Response containing one or more application details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Applications'
          examples:
            AppResponseExample:
              $ref: '#/components/examples/AppResponseExample'
    InstitutionsResponse:
      description:
        Response containing institution detail for requested pre application.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthInstitutions'
          examples:
            InstitutionsDetailResponseExample:
              $ref: '#/components/examples/OauthInstitutionsExample'
    RegisterAppResponse:
      description: The app registration was successfully created.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisteredApplication'
    ModifyAppRegistrationResponse:
      description: The app registration was updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisteredApplication'
  examples:
    MissingAppKeyExample:
      value:
        code: 10026
        message: Missing parameter (App-Key)
    InvalidCredentialsExample:
      value:
        code: 10001
        message: Invalid credentials
    GenericBadRequestExample:
      value:
        code: 14020
        message: Bad request.
    MissingFieldExample:
      value:
        code: '10010'
        status: '400'
        message: '"partnerId" is required'
        user_message: >-
          One or more of the fields could not be validated. Please ensure you
          have entered the correct data.
    InvalidFieldExample:
      value:
        code: '10010'
        status: '400'
        message: Customer ID does not exist or does not belong to this partner
        user_message: >-
          One or more of the fields could not be validated. Please ensure you
          have entered the correct data.
    InvalidExperienceFieldExample:
      value:
        code: '10010'
        status: '400'
        message: '"experience" must be a valid GUID'
        user_message:
          'One or more of the fields could not be validated. Please ensure you
          have entered the correct data.'
    ExpiredTokenExample:
      value:
        code: '10022'
        status: '401'
        message: Invalid authorization credentials
        user_message: The session has expired or is invalid
    NoAccountForInstitutionLoginIdExample:
      value:
        code: '38007'
        status: '404'
        title: Connecting accounts error
        user_message:
          Customer does not have any accounts associated with
          institutionLoginId.
        level: 'error'
        message:
          'Customer does not have any accounts associated with
          institutionLoginId.'
    CustomerNotFoundExample:
      value:
        code: 14001
        message: 'Customer not found.'
    ConsumerNotFoundExample:
      value:
        code: 10100
        message: 'Cannot find consumer with id 1234.'
    NoConsumerForCustomerExample:
      value:
        code: 10100
        message: 'Cannot find consumer for customer with id 5011115315."'
    ResourceNotFoundExample:
      value:
        code: 14001
        message: 'Resource not found.'
    NoRegisteredApplicationExample:
      value:
        code: 50051
        message: 'No registered partner applications found.'
    ConsumerExistsConflictExample:
      value:
        code: 11000
        message: 'A consumer already exists for customer 4025024821'
    VOAReportExample:
      summary: VOA Report
      value:
        id: u4hstnnak45g
        customerId: 1000006677
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        requesterName: Mastercard Open Banking Test API
        title: Mastercard Open Banking Verification of Assets
        requestId: sfb7xp439w
        type: voa
        status: success
        createdDate: 1588350269
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
        customerType: active
        startDate: 1572625469
        endDate: 1588350269
        days: 180
        seasoned: false
        consolidatedAvailableBalance: 2345
        institutions:
          id: 101732
          name: FinBank
          urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
          accounts:
            id: 1000023996
            number: '1111'
            ownerName: JOHN DOE
            ownerAddress: 924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518
            name: Checking
            type: checking
            availableBalance: 501.24
            aggregationStatusCode: 0
            balance: 501.24
            balanceDate: 1588350276
            averageMonthlyBalance: 501.02
            totNumberInsufficientFundsFeeDebitTxAccount: 0
            totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount: 0
            totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: 120
            transactions:
              - id: 100000527471
                amount: 22.21
                postedDate: 1582286400
                description: FINICITY INC PAYROLL
                memo: Finicity amount credit
                normalizedPayee: Finicity
                institutionTransactionId: '100000000'
                category: Paycheck
                bestRepresentation: FINICITY INC PAYROLL
            details:
              interestMarginBalance: -50000
              availableCashBalance: 1500
              vestedBalance: 300000
              currentLoanBalance: 0
              availableBalanceAmount: 1000
            asset:
              currentBalance: 1000
              twoMonthAverage: -1865.96
              sixMonthAverage: -7616.01
              beginningBalance: -17795.6
        balanceSummary:
          - currency: AUD
            currentBalance: 1000
            twoMonthAverage: -1865.96
            sixMonthAverage: -7616.01
            beginningBalance: -17795.6
    VOIReportExample:
      summary: VOI Report
      value:
        id: u4hstnnaewetr-voi
        customerId: 1000006677
        title: Mastercard Open Banking Verification of Income
        requesterName: Mastercard Open Banking Test API
        requestId: sfb7xp4wer
        type: voi
        status: success
        createdDate: 1588350269
        customerType: active
        startDate: 1572625469
        endDate: 1588350269
        days: 200
        seasoned: true
        institutions:
          id: 101732
          name: FinBank
          urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
          accounts:
            id: 1000023996
            number: '1111'
            name: Checking
            type: checking
            aggregationStatusCode: 0
            incomeStreams:
              id: dens28i3vsch-voi1
              name: none
              status: ACTIVE
              estimateInclusion: MODERATE
              confidence: 70
              cadence:
                startDate: 1577986990
                stopDate: 1587986990
                days: 14
              netMonthly:
                - month: 1522562400
                  net: 2004.77
              netAnnual: 110475.7
              projectedNetAnnual: 0
              estimatedGrossAnnual:
              projectedGrossAnnual: 151609
              averageMonthlyIncomeNet: 9206.31
              incomeStreamMonths: 18
              transactions:
                - id: 100000527471
                  amount: 22.21
                  postedDate: 1582286400
                  description: FINICITY INC PAYROLL
                  memo: Finicity amount credit
                  institutionTransactionId: '100000000'
                  category: Paycheck
            balance: 714.16
            averageMonthlyBalance: 720.75
            transactions: []
            availableBalance: 714.16
            currentBalance: 714.16
            beginningBalance: 714.77
            miscDeposits:
              - id: 100000527471
                amount: 22.21
                postedDate: 1582286400
                description: FINICITY INC PAYROLL
                memo: Finicity amount credit
                institutionTransactionId: '100000000'
                category: Paycheck
        income:
          - confidenceType: MODERATE
            netMonthly:
              - month: 1522562400
                net: 2004.77
            incomeEstimate:
              netAnnual: 1000.12
              projectedNetAnnual: 1500.23
              estimatedGrossAnnual: 2000.12
              projectedGrossAnnual: 2500.23
    CashFlowBusinessReportExample:
      summary: Cash Flow Report - Business
      value:
        id: sd1j45yn37wr-cfrb
        customerType: testing
        customerId: 5555
        requestId: xtw6tjemt6
        title: Mastercard Open Banking Cash Flow Report Business
        requesterName: Mastercard Open Banking Test API
        type: cfrb
        status: success
        createdDate: 1575666823
        startDate: 1512594823
        endDate: 1575666823
        days: 730
        seasoned: true
        institutions:
          - id: '102105'
            name: FinBank Profiles
            urlHomeApp: http://www.finbank.com
            accounts:
              - id: '6681984'
                ownerName: PATRICK & LORRAINE PURCHASER
                ownerAddress: 7195 BELMONT ST. PARLIN, NJ 08859
                name: Checking
                number: XX1111
                type: checking
                aggregationStatusCode: '0'
                currentBalance: 100000
                availableBalance: 1000
                balanceDate: 1614880526
                transactions:
                  - id: '100671406523'
                    amount: -81.7
                    postedDate: 1614859200
                    description: TMOBILE*AUTO PAY
                    normalizedPayee: T-Mobile
                    institutionTransactionId: '0000000000'
                    category: Mobile Phone
                cashFlowBalance:
                  monthlyCashFlowBalances:
                    - month: 1551423600
                      minDailyBalance: -65894.54
                      maxDailyBalance: -62196.98
                      averageDailyBalance: -64594.87
                      standardDeviationOfDailyBalance: '1099'
                      numberOfDaysNegativeBalance: '28'
                      numberOfDaysPositiveBalance: '0'
                  minDailyBalance: 3479.39
                  maxDailyBalance: 3479.39
                  twelveMonthAverageDailyBalance: 3479.39
                  sixMonthAverageDailyBalance: 3479.39
                  twoMonthAverageDailyBalance: 3479.39
                  twelveMonthStandardDeviationOfDailyBalance: '20'
                  sixMonthStandardDeviationOfDailyBalance: '20'
                  twoMonthStandardDeviationOfDailyBalance: '20'
                  numberDaysNegativeBalance: '6'
                  numberOfDaysPositiveBalance: '0'
                cashFlowCredit:
                  monthlyCashFlowCredits:
                    - month: 1551423600
                      numberOfCredits: '3'
                      totalCreditsAmount: 5000.29
                      largestCredit: 2182.34
                      numberOfCreditsLessTransfers: '3'
                      totalCreditsAmountLessTransfers: 5000.29
                      averageCreditAmount: 1666.76
                      estimatedNumberOfLoanDeposits: '0'
                      estimatedLoanDepositAmount: 0
                  twelveMonthCreditTotal: 1200
                  twelveMonthCreditTotalLessTransfers: 1000
                  sixMonthCreditTotal: 750
                  sixMonthCreditTotalLessTransfers: 500
                  twoMonthCreditTotal: 150
                  twoMonthCreditTotalLessTransfers: 100
                cashFlowDebit:
                  monthlyCashFlowDebits:
                    - month: 1551423600
                      numberOfDebits: '12'
                      totalDebitsAmount: -2063.43
                      largestDebit: -953.73
                      numberOfDebitsLessTransfers: '12'
                      totalDebitsAmountLessTransfers: -2063.43
                      averageDebitAmount: -171.95
                  twelveMonthDebitTotal: 1200
                  twelveMonthDebitTotalLessTransfers: 1000
                  sixMonthDebitTotal: 750
                  sixMonthDebitTotalLessTransfers: 500
                  twoMonthDebitTotal: 150
                  twoMonthDebitTotalLessTransfers: 100
                cashFlowCharacteristic:
                  monthlyCashFlowCharacteristics:
                    - month: 1551423600
                      totalCreditsLessTotalDebits: 2936.86
                      totalCreditsLessTotalDebitsLessTransfers: 2936.86
                      averageTransactionAmount: 195.79
                  averageMonthlyNet: 2350
                  averageMonthlyNetLessTransfers: 1000
                  twelveMonthTotalNet: 12500
                  twelveMonthTotalNetLessTransfers: 12400
                  sixMonthAverageTotalCreditsLessTotalDebits: 55555
                  sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
                  twoMonthAverageTotalCreditsLessTotalDebits: 55555
                  twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
        cashFlowBalanceSummary:
          monthlyCashFlowBalanceSummaries:
            - month: 1551423600
              minDailyBalance: -65894.54
              maxDailyBalance: -62196.98
              averageDailyBalance: -64594.87
              standardDeviationOfDailyBalance: '1099'
              numberOfDaysNegativeBalance: '28'
              numberOfDaysPositiveBalance: '0'
          minDailyBalance: 3479.39
          maxDailyBalance: 3479.39
          twelveMonthAverageDailyBalance: 3479.39
          sixMonthAverageDailyBalance: 3479.39
          twoMonthAverageDailyBalance: 3479.39
          twelveMonthStandardDeviationOfDailyBalance: '20'
          sixMonthStandardDeviationOfDailyBalance: '20'
          twoMonthStandardDeviationOfDailyBalance: '20'
          numberOfDaysNegativeBalance: '6'
          numberOfDaysPositiveBalance: '11'
        cashFlowCreditSummary:
          monthlyCashFlowCreditSummaries:
            - month: 1551423600
              numberOfCredits: '3'
              totalCreditsAmount: 5000.29
              largestCredit: 2182.34
              numberOfCreditsLessTransfers: '3'
              totalCreditsAmountLessTransfers: 5000.29
              averageCreditAmount: 1666.76
              estimatedNumberOfLoanDeposits: '0'
              estimatedLoanDepositAmount: 0
          twelveMonthCreditTotal: 1200
          twelveMonthCreditTotalLessTransfers: 1000
          sixMonthCreditTotal: 750
          sixMonthCreditTotalLessTransfers: 500
          twoMonthCreditTotal: 150
          twoMonthCreditTotalLessTransfers: 100
        cashFlowDebitSummary:
          monthlyCashFlowDebitSummaries:
            - month: 1551423600
              numberOfDebits: '12'
              totalDebitsAmount: -2063.43
              largestDebit: -953.73
              numberOfDebitsLessTransfers: '12'
              totalDebitsAmountLessTransfers: -2063.43
              averageDebitAmount: -171.95
          twelveMonthDebitTotal: -1200
          twelveMonthDebitTotalLessTransfers: -1000
          sixMonthDebitTotal: -750
          sixMonthDebitTotalLessTransfers: -500
          twoMonthDebitTotal: -150
          twoMonthDebitTotalLessTransfers: -100
        cashFlowCharacteristicsSummary:
          monthlyCashFlowCharacteristicsSummaries:
            - month: 1551423600
              totalCreditsLessTotalDebits: 2936.86
              totalCreditsLessTotalDebitsLessTransfers: 2936.86
              averageTransactionAmount: 195.79
          averageMonthlyNet: 1250
          averageMonthlyNetLessTransfers: 1000
          twelveMonthTotalNet: 12500
          twelveMonthTotalNetLessTransfers: 12400
          sixMonthAverageTotalCreditsLessTotalDebits: 55555
          sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
          twoMonthAverageTotalCreditsLessTotalDebits: 55555
          twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
        possibleLoanDeposits:
          - id: '102105'
            name: FinBank Profiles
            urlHomeApp: http://www.finbank.com
            accounts:
              - id: '6681984'
                ownerName: PATRICK & LORRAINE PURCHASER
                ownerAddress: 7195 BELMONT ST. PARLIN, NJ 08859
                name: Checking
                number: XX1111
                type: checking
                aggregationStatusCode: '0'
                currentBalance: 100000
                availableBalance: 1000
                balanceDate: 1614880526
                transactions:
                  - id: '100671406523'
                    amount: -81.7
                    postedDate: 1614859200
                    description: TMOBILE*AUTO PAY
                    normalizedPayee: T-Mobile
                    institutionTransactionId: '0000000000'
                    category: Mobile Phone
    CustomerAccountsResponseExample:
      value:
        accounts:
          - id: 8502103
            number: xxxx8555
            accountNumberDisplay: 8555
            realAccountNumberLast4: 8555
            name: Spend account
            balance: 117.33
            type: transactionAndSavings
            aggregationStatusCode: 0
            status: active
            customerId: 1325621
            institutionId: 2002034
            balanceDate: 1696809841
            aggregationSuccessDate: 1696809841
            aggregationAttemptDate: 1696809841
            createdDate: 1696551311
            lastUpdatedDate: 1696590914
            currency: AUD
            lastTransactionDate: 1696809840
            institutionLoginId: 1249150
            detail:
              interestRate: 15.789
            accountNickname: Spend account
            marketSegment: personal
    CustomerAccountResponseExample:
      value:
        id: 8502103
        number: xxxx8555
        accountNumberDisplay: 8555
        realAccountNumberLast4: 8555
        name: Spend account
        balance: 117.33
        type: transactionAndSavings
        aggregationStatusCode: 0
        status: active
        customerId: 1325621
        institutionId: 2002034
        balanceDate: 1696809841
        aggregationSuccessDate: 1696809841
        aggregationAttemptDate: 1696809841
        createdDate: 1696551311
        lastUpdatedDate: 1696590914
        currency: AUD
        lastTransactionDate: 1696809840
        institutionLoginId: 1249150
        detail:
          interestRate: 15.789
        accountNickname: Spend account
        marketSegment: personal
    AccountOwnerResponseExample:
      value:
        holders:
          - ownerName: John Smith
            firstName: John
            lastName: Smith
            addresses:
              - ownerAddress: 100 Arthur Street
                type: Home
                line1: 100 Arthur Street
                line2: Level 8
                line3: GA 30518
                city: Sydney
                state: NSW
                postalCode: 2060
            emails:
              - email: someone@test.com
                emailType: Personal
            phones:
              - type: cell
                phone: 61-3-1234-1234
    AvailablebalanceLiveByAccountIdResponseExample:
      value:
        id: 1005061234
        realAccountNumberLast4: 5678
        availableBalance: 173.47
        availableBalanceDate: 1607450357
        clearedBalance: 222.25
        clearedBalanceDate: 1607450357
        aggregationStatusCode: 0
        currency: AUD
    TransactionByAccountIdExample:
      value:
        id: 284040226
        amount: -12.79
        accountId: 8582123
        customerId: 1325621
        status: active
        description:
          WOOLWORTHS/GRAF AVE & MARWEST RYDE AU\\\\nVisa|Google Pay|6808
        institutionTransactionId: 9108077
        type: transferOutgoing
        postedDate: 1696788774
        transactionDate: 1696788774
        createdDate: 1696842852
    TransactionsByAccountsExample:
      value:
        found: 200
        displaying: 1
        moreAvailable: true
        fromDate: 1000000000
        toDate: 1697149082
        sort: desc
        transactions:
          - id: 284040226
            amount: -12.79
            accountId: 8582123
            customerId: 1325621
            status: active
            description:
              WOOLWORTHS/GRAF AVE & MARWEST RYDE AU\\\\nVisa|Google Pay|6808
            institutionTransactionId: 9108077
            type: transferOutgoing
            postedDate: 1696788774
            transactionDate: 1696788774
            createdDate: 1696842852
    ReportDataVoaExample:
      value:
        id: u4hstnnak45g
        customerType: active
        customerId: 1005061234
        requestId: cjqm4wtdcn
        requesterName: Mastercard Open Banking Test API
        createdDate: 1607450357
        title: Mastercard Open Banking Verification of Assets
        consumerId: 0bf46322c167b562e6cbed9d40e19a4c
        type: voa
        status: inProgress
        constraints:
          accountIds:
            - '5011648377'
            - '5011648378'
            - '5011648379'
          reportCustomFields:
            - label: loanID
              value: '123456'
              shown: true
          fromDate: 1607450357
    ReportDataVoiExample:
      value:
        id: u4hstnnak45g-voi
        customerType: active
        customerId: 1005061234
        requestId: cjqm4wtdcn
        requesterName: Mastercard Open Banking Test API
        createdDate: 1607450357
        title: Mastercard Open Banking Verification of Income
        consumerId: 0bf46322c167b562e6cbed9d40e19a4c
        type: voi
        status: inProgress
        constraints:
          accountIds:
            - '5011648377'
            - '5011648378'
            - '5011648379'
          reportCustomFields:
            - label: loanID
              value: '123456'
              shown: true
          fromDate: 1607450357
          incomeStreamConfidenceMinimum: 50
    ReportDataCfrbExample:
      value:
        id: u4hstnnak45g-cfrb
        customerType: active
        customerId: 1005061234
        requestId: cjqm4wtdcn
        requesterName: Mastercard Open Banking Test API
        createdDate: 1607450357
        title: Mastercard Open Banking Cash Flow Report Business
        type: cfrb
        status: inProgress
        constraints:
          accountIds:
            - '5011648377'
            - '5011648378'
            - '5011648379'
          reportCustomFields:
            - label: loanID
              value: '123456'
              shown: true
          fromDate: 1607450357
    AccountTypeNotSupportedExample:
      value:
        code: 14020
        message: 'Bad request. (Account type not supported).'
    AppResponseExample:
      value:
        found: 2
        displaying: 2
        moreAvailable: false
        applications:
          - applicationId: 234dsfdsf-535fdgdtrtr-546464564
            status: Active
            appName: Mvelopes
            appDescription:
              'The app that makes your budgeting experience awesome'
            legalEntityName: 'Budget Maker'
            appUrl: 'https://myBudgetMaker.com'
            policyUrl: 'https://myBudgetMakerCdrPolicy.com'
            dataComplaintsEmailAddress: 'datasupport@budgetmaker.com'
            image: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
            copyrightLogo: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
            businessName: 'Mastercard.'
            fromEmail: 'no-reply@mastercard.com'
            replyToEmail: 'reply@mastercard.com'
            softwareId: 'afa07bc3-7edf-4690-8fea-829e2613671f'
            orgId: 'a2a1a8d6-f2c2-4d98-906d-6e74e08ad1d8'
            note: Auto approved
            jwksUrl: 'https://www.budget-application.com.au/jwks/de901e6a-4b7c-4d98-906d-6e74e08ad1d8'
            dataRecipientRevocationUrl: 'https://www.budget-application.com.au/arrangements/revoke'
            dataRecipientBaseUrl: 'https://www.budget-application.com.au'
            dataRecipientRedirectUrl: 'https://www.budget-application.com.au/oauth/v1/callback'
            createdDate: 2020-07-30T16:11:23Z
            modifiedDate: 2020-07-30T16:11:23Z
            submittedDate: 2020-07-30T16:11:23Z
          - applicationId: 32edsfdsf-535dsdsrtr-546dsaes4
            status: Deleted
            appName: TestApp
            note: Duplicate deleted
            appDescription: 'testing application'
            legalEntityName: 'Budget Maker'
            appUrl: 'https://myBudgetMaker.com'
            policyUrl: 'https://myBudgetMakerCdrPolicy.com'
            dataComplaintsEmailAddress: 'datasupport@budgetmaker.com'
            image: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
            copyrightLogo: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
            businessName: 'Mastercard.'
            fromEmail: 'no-reply@mastercard.com'
            replyToEmail: 'reply@mastercard.com'
            softwareId: 'afa07bc3-7edf-4690-8fea-829e2613671f'
            orgId: 'a2a1a8d6-f2c2-4d98-906d-6e74e08ad1d8'
            jwksUrl: 'https://www.budget-application.com.au/jwks/de901e6a-4b7c-4d98-906d-6e74e08ad1d8'
            dataRecipientRevocationUrl: 'https://www.budget-application.com.au/arrangements/revoke'
            dataRecipientBaseUrl: 'https://www.budget-application.com.au'
            dataRecipientRedirectUrl: 'https://www.budget-application.com.au/oauth/v1/callback'
            createdDate: 2020-07-30T16:11:23Z
            modifiedDate: 2020-07-30T16:11:23Z
            submittedDate: 2020-07-30T16:11:23Z
    OauthInstitutionsExample:
      value:
        found: 500
        displaying: 2
        moreAvailable: true
        institutions:
          - institutionId: 170716
            isAppRegistered: true
            createdDate: 2020-07-30T16:11:23Z
            modifiedDate: 2020-07-30T16:11:23Z
          - institutionId: 102224
            isAppRegistered: false
            createdDate: 2020-07-30T16:11:23Z
            modifiedDate: 2020-07-30T16:11:23Z
  parameters:
    ConsentReceiptIdHeader:
      description: A Mastercard Open Banking Consent Receipt ID
      name: Consent-Receipt-Id
      in: header
      required: true
      schema:
        $ref: '#/components/schemas/ConsentReceiptId'
      example: '123e4567-e89b-42d3-a456-556642440000'
    CustomerIdParameter:
      description: A Mastercard Open Banking customer ID
      name: customerId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CustomerId'
      example: '1005061234'
    AccountStatusParameter:
      description: A filter to fetch account in the given status
      name: status
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AccountStatus'
      example: pending
    TransactionIdParameter:
      description: A Mastercard Open Banking transaction ID
      name: transactionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TransactionId'
      example: 21284820852
    IncludePendingParameter:
      description: If pending transactions must be included
      name: includePending
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/IncludePending'
      example: false
    ApplicationIdQueryParameter:
      description: The application ID
      name: applicationId
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationId'
      example: '123456789'
    AppRegistrationStatusParameter:
      description: Look up app registration requests by status
      name: status
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AppRegistrationStatus'
      example: P
    ApplicationNameParameter:
      description: Look up app registration requests by app name
      name: appName
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationName'
      example: Awesome Budget App
    CustomerSearchParameter:
      name: search
      in: query
      required: false
      description: >-
        The text you wish to match. Leave this empty if you wish to return all
        customers. Must be URL-encoded (see also: [How do I handle Spaces in
        Queries?](https://developer.mastercard.com/open-banking-au/documentation/support/)).
      schema:
        type: string
        example: 'Search Value'
    CustomerUsernameParameter:
      name: username
      in: query
      required: false
      description: Username for exact match (will return 0 or 1 record)
      schema:
        $ref: '#/components/schemas/CustomerUsername'
      example: customerusername1
    CustomerTypeParameter:
      name: type
      in: query
      required: false
      description: >-
        "testing" or "active" to return only customers of that type, or leave
        empty to return all customers.
      schema:
        $ref: '#/components/schemas/CustomerType'
      example: 'active'
    AccountIdParameter:
      description: The account ID
      name: accountId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AccountId'
      example: '5011648377'
    InstitutionLoginIdParameter:
      description: The institution login ID
      name: institutionLoginId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/InstitutionLoginId'
      example: '1007302745'
    InstitutionIdParameter:
      description: The institution ID
      name: institutionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/NumericInstitutionId'
      example: 4222
    ReportIdParameter:
      name: reportId
      in: path
      description: Mastercard's ID of the report
      required: true
      schema:
        $ref: '#/components/schemas/ReportId'
      example: u4hstnnak45g
    ConsumerIdParameter:
      description: The consumer ID
      name: consumerId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ConsumerId'
      example: '0bf46322c167b562e6cbed9d40e19a4c'
    StartParameter:
      name: start
      in: query
      required: false
      description: Index of the page of results to return.
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
        example: 1
    LimitParameter:
      name: limit
      in: query
      required: false
      description: Maximum number of results per page
      schema:
        type: integer
        format: int32
        default: 25
        maximum: 1000
        example: 25
    SortParameter:
      name: sort
      in: query
      required: false
      description: 'Date sort order: "asc" for ascending, "desc" for descending'
      schema:
        type: string
        default: 'desc'
        example: 'desc'
    ResultPageParameter:
      name: page
      in: query
      required: false
      description: Index of the page of results to return
      schema:
        type: integer
        format: int32
        default: 1
        example: 1
    ResultPageSizeParameter:
      name: pageSize
      in: query
      required: false
      description: Maximum number of results per page
      schema:
        type: integer
        format: int32
        default: 1
        example: 20
    ProductTypeParameter:
      name: type
      in: query
      description:
        'A product type: "transAgg", "ach", "stateAgg", "voi", "voa", "aha",
        "availBalance", "accountOwner"'
      required: false
      schema:
        type: string
        example: voa
    InstitutionSearchParameter:
      name: search
      in: query
      description:
        Search term (financial institution `name` field). Leave empty for all
        FIs.
      required: false
      schema:
        type: string
        example: finbank
    RequiredFromDateParameter:
      description: A "from" date
      name: fromDate
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    RequiredToDateParameter:
      description: A "to" date
      name: toDate
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    ReportCallbackUrlParameter:
      name: callbackUrl
      in: query
      required: false
      description:
        A Report Listener URL to receive notifications. The webhook must respond
        to the Mastercard Open Banking API with 2xx HTTP status code.
      schema:
        type: string
        example: 'https://openbanking-test/webhook'
    WebhookSubscriptionIdParameter:
      name: subscription_id
      description:
        A Mastercard Open Banking webhook notification subscription ID.
      example: 58afc6e5-7293-4d4a-b6de-005269f37992
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/WebhookSubscriptionId'
    WebhookSubscriptionStatusParameter:
      name: status
      in: query
      required: false
      description: Status of webhook notification subscription. Possible values
        are ACTIVE, INACTIVE. You can pass multiple values in comma separated to
        apply more filters.


        This is an optional parameter. When omitted, all active and inactive
        subscriptions will be returned.
      example: 'ACTIVE'
      schema:
        $ref: '#/components/schemas/WebhookSubscriptionStatus'
    AppIdPathParameter:
      name: application_id
      in: path
      description:
        A unique identifier of an application within the Mastercard Open Banking
        system.
      required: true
      schema:
        type: string
      example: 234dsfdsf-535fdgdtrtr-546464564
    ApplicationLimitParameter:
      name: limit
      in: query
      required: false
      description: Maximum number of results per page.
      schema:
        type: integer
        format: int32
        default: 50
        minimum: 1
        maximum: 100
        example: 20
    InstitutionLimitParameter:
      name: limit
      in: query
      required: false
      description: Maximum number of results per page.
      schema:
        type: integer
        format: int32
        default: 25
        minimum: 1
        maximum: 1000
        example: 25
    ApplicationIdParameter:
      name: application_id
      in: query
      description:
        A unique identifier of an application, use this application_id to get
        the details of the registered application within the Mastercard Open
        Banking system.
      required: false
      schema:
        type: string
      example: 00278431-b712-4f30-a044-b611f25e533d
    AppNameParameter:
      name: app_name
      in: query
      description: A name of the application.
      required: false
      schema:
        type: string
      example: Mvelopes
    AppStatusParameter:
      name: status
      in: query
      description: |-
        Status of the application request within the Mastercard Open Banking system.


          Allowable values are:
           * Active: When application registration is approved and application is registered with financial institutions.
           * Pending: When application registration is in-progress.
           * Deleted: When application is deleted from the system.
           * Rejected: When application is rejected. Refer 'note' to know more on why application is rejected.
      required: false
      schema:
        type: string
      example: Pending
    InstitutionIdPathParameter:
      name: institution_id
      in: query
      description:
        A unique identifier of the financial institution within the Mastercard
        Open Banking system. Use this value to check whether the application is
        already registered with and can access data from this particular
        institution.
      required: false
      schema:
        type: integer
        format: int64
      example: 170716
  schemas:
    ErrorMessage:
      required:
        - code
      type: object
      properties:
        code:
          type: object
          description: An error code (can be returned as a number or a string)
          example: '10001'
        status:
          type: string
          description: A status code
          example: '401'
        title:
          type: string
          description: A title for the error
          example: Connecting accounts error
        level:
          type: string
          description: An error level
          example: error
        message:
          type: string
          description: An error message
          example: Invalid authorization credentials
        user_message:
          type: string
          description: Some more details about the error
          example: The session has expired or is invalid
        assetId:
          $ref: '#/components/schemas/AssetId'
        accountId:
          $ref: '#/components/schemas/AccountId'
    PartnerId:
      type: string
      description:
        Your Partner ID displayed in the [Developer
        Dashboard](https://developer.mastercard.com/dashboard)
      example: '1234583871234'
    PartnerName:
      type: string
      description: Name of a Mastercard Open Banking partner
      example: Mastercard Open Banking Test API
    ConsumerId:
      type: string
      description:
        'A Mastercard Open Banking consumer ID. See also: "Create Consumer".'
      example: '0bf46322c167b562e6cbed9d40e19a4c'
    CustomerId:
      type: string
      description:
        'A Mastercard Open Banking customer ID. See also: "Add Customer".'
      example: '1005061234'
    NumericCustomerId:
      type: integer
      format: int64
      description:
        'A Mastercard Open Banking customer ID represented as a number. See
        also: "Add Customer".'
      example: 1005061234
    AccountStatus:
      description: An account status
      type: string
      example: pending
    ReportId:
      type: string
      description: A Mastercard Open Banking report ID
      example: u4hstnnak45g
    ReportTitle:
      type: string
      description: Title of the report
      example: Mastercard Open Banking Verification of Assets
    ReportRequestId:
      type: string
      description:
        Mastercard Open Banking indicator to track all activity associated with
        this report
      example: cjqm4wtdcn
    AccountId:
      type: string
      description: A Mastercard Open Banking account ID
      example: '5011648377'
    NumericAccountId:
      type: integer
      format: int64
      description: A Mastercard Open Banking account ID represented as a number
      example: 5011648377
    AccountNumberLast4:
      type: string
      description: The last 4 digits of the ACH account number
      example: '5678'
    TransactionId:
      type: integer
      description: A Mastercard Open Banking transaction ID
      format: int64
      example: 21284820852
    IncludePending:
      type: boolean
      description: If pending transactions must be included
      example: true
      default: false
    AssetId:
      type: string
      description:
        A Mastercard Open Banking asset ID. Generated by Connect or by using the
        "Store Customer Pay Statement" API.
      example: 097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178
    ReportAccountIdsString:
      type: string
      description:
        A whitespace-separated list of Mastercard Open Banking account IDs to be
        included in the report (all accounts will be included if not set)
      example: '5011648377 5011648378 5011648379'
    ReportAccountIds:
      description:
        An array of Mastercard Open Banking account IDs to be included in the
        report (all accounts will be included if not set)
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
      example:
        - '5011648377'
        - '5011648378'
        - '5011648379'
    Rssd:
      type: integer
      description: >-
        The RSSD ID is a unique identifier assigned to financial institutions by
        the Federal Reserve. While the length of the RSSD ID varies by
        institution, it cannot exceed 10 numerical digits.
      format: int64
      example: 490535
    InstitutionId:
      description: The ID of a financial institution
      type: string
      example: '4222'
    NumericInstitutionId:
      description: The ID of a financial institution, represented as a number
      type: integer
      format: int64
      example: 4222
    InstitutionName:
      type: string
      description: The name of the institution
      example: 'FinBank'
    InstitutionTransAgg:
      type: boolean
      description: >-
        `true`: The institution is certified for the Transaction Aggregation
        product

        `false`: The institution is decertified for the Transaction Aggregation
        product
      example: true
    InstitutionAch:
      type: boolean
      description: >-
        `true`: The institution is certified for the ACH product

        `false`: The institution is decertified for the ACH product
      example: true
    InstitutionStateAgg:
      type: boolean
      description: >-
        `true`: The institution is certified for the Statement Aggregation
        product

        `false`: The institution is decertified for the Statement Aggregation
        product
      example: false
    InstitutionVoi:
      type: boolean
      description: >-
        `true`: The institution is certified for the VOI product

        `false`: The institution is decertified for the VOI product
      example: true
    InstitutionVoa:
      type: boolean
      description: >-
        `true`: The institution is certified for the VOA product

        `false`: The institution is decertified for the VOA product
      example: true
    InstitutionAha:
      type: boolean
      description: >-
        `true`: The institution is certified for the Account History Aggregation
        product

        `false`: The institution is decertified for the Account History
        Aggregation product
      example: false
    InstitutionAvailableBalance:
      type: boolean
      description: >-
        `true`: The institution is certified for the Account Balance Check (ABC)
        product

        `false`: The institution is decertified for the Account Balance Check
        product
      example: false
    InstitutionAccountOwner:
      type: boolean
      description: >-
        `true`: The institution is certified for the Account Owner product

        `false`: The institution is decertified for the Account Owner product
      example: true
    InstitutionLoginId:
      type: string
      description: An institution login ID (from the account record)
      example: '1007302745'
    NumericInstitutionLoginId:
      type: integer
      format: int64
      description:
        An institution login ID (from the account record), represented as a
        number
      example: 1007302745
    PartnerCredentials:
      required:
        - partnerId
        - partnerSecret
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        partnerSecret:
          type: string
          description:
            Your Partner Secret displayed in the [Developer
            Dashboard](https://developer.mastercard.com/dashboard)
          example: aqJ5Ic4SEVx2IgDQ6oR4
    AccessToken:
      required:
        - token
      type: object
      description: >-
        A temporary access token to be passed in the `App-Token` HTTP header of
        all subsequent API requests
      properties:
        token:
          description: The access token value
          type: string
          example: YBh22Sb9Es6e66Q7lWdt
    ConnectParameters:
      required:
        - partnerId
        - customerId
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        consumerId:
          # Required for any connect type that generates a report
          $ref: '#/components/schemas/ConsumerId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        optionalConsumerInfo:
          $ref: '#/components/schemas/ConsumerInfo'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
        experience:
          $ref: '#/components/schemas/Experience'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        isWebView:
          $ref: '#/components/schemas/IsWebView'
    ConnectDashboardParameters:
      type: object
      required:
        - partnerId
        - customerId
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        experience:
          $ref: '#/components/schemas/Experience'
    ConnectLiteParameters:
      required:
        - partnerId
        - customerId
        - institutionId
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        experience:
          $ref: '#/components/schemas/Experience'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
    ConsumerInfo:
      description: Date of birth of a consumer
      type: object
      properties:
        dob:
          $ref: '#/components/schemas/ConsumerDateOfBirth'
    EmailAddress:
      type: string
      description: An email address
      example: someone@test.com
    ConsumerDateOfBirth:
      #  Note: DOB's prior to 1970 result in a negative timestamp; this is acceptable. Note: All other timestamps in Decisioning are in MST.
      $ref: '#/components/schemas/UnixDate'
    RedirectUri:
      type: string
      description: >-
        The URL that customers will be redirected to after completing Connect.
        Required unless Connect is embedded inside our application (iframe).
      example: 'https://backend.com/connect/'
    Webhook:
      type: string
      description: >-
        The publicly available URL you want to be notified with events as the
        user progresses through the application. See [Connect Webhook
        Event](https://developer.mastercard.com/open-banking-au/documentation/connect/webhooks/)
        for event details.
      example: 'https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b'
    WebhookContentType:
      type: string
      description: >-
        The content type the webhook events will be sent in. Supported types:
        `application/json` and `application/xml`.
      default: application/json
      example: application/json
    WebhookData:
      type: object
      description: >-
        Allows additional identifiable information to be inserted into the
        payload of connect webhook events. See also: [Custom
        Webhooks](https://developer.mastercard.com/open-banking-au/documentation/connect/webhooks/).
    WebhookHeaders:
      type: object
      description: >-
        Allows additional identifiable information to be included as headers of
        connect webhook event. See also: [Custom
        Webhooks](https://developer.mastercard.com/open-banking-au/documentation/connect/webhooks/).
    Experience:
      type: string
      description: >-
        The `experience` field allows you to customize:

        * Brand: color and logo

        * Icon: displayed on the "Share your data" page

        * Popular institutions: displayed on the Bank Search page

        * Report: the credit decisioning report to send when Connect completes.

        * MVS modules: financial, payroll, pay stub


        Note: the Mastercard Open Banking sales engineers (SE) help you set up a
        default experience for your company when you migrate to Connect 2.0. For
        each additional experience you create thereafter, they'll give you a
        unique ID. See [Generate Connect URL
        APIs](https://developer.mastercard.com/open-banking-au/documentation/connect/generate-2-connect-url-apis/).


        Experience values options:

        * "default": your default experience (must be defined)

        * GUID: the code for a different experience

        * Not defined: If you don't pass the experience parameter, then
        Connect's out of the box default experience (add accounts but no
        branding) is used, and the MVS modules will not run.
      example: 'default'
    SingleUseUrl:
      type: boolean
      description: >-
        `true`: The URL link expires after a Connect session successfully
        completes.


        Note: when the `singleUseUrl` and the `experience` parameters are passed
        in the same call, the `singleUseUrl` value overrides the `singleUseUrl`
        value configured in the `experience` parameter.
      example: true
    IsWebView:
      type: boolean
      description: >-
        "true": Indicates that the Connect Session will be displayed within a
        WebView. When the `isWebView` parameter is `true` the `redirectUri`
        parameter is required.


        Note: This parameter is no longer recommended. We instead recommend
        specifying a `redirectUrl` through our WebSDK. Please refer to the
        following documentation:


        -
        [iOS](https://developer.mastercard.com/open-banking-us/documentation/connect/integrating/webviews/ios-webviews/)


        -
        [Android](https://developer.mastercard.com/open-banking-us/documentation/connect/integrating/webviews/android-webviews/)
      example: true
    ReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          # Without this parameter, the report defaults to 6 months if available
          # If included, the epoch timestamp should be 10 digits long and be within
          # two years of the present day
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    ReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    ReportCustomField:
      type: object
      properties:
        label:
          type: string
          description: The name of the custom field
          example: 'loanID'
        value:
          type: string
          description: The value of the custom field
          example: '123456'
        shown:
          type: boolean
          description: If the custom field will show on the PDF or not
          example: true
    ReportCustomFields:
      type: array
      items:
        $ref: '#/components/schemas/ReportCustomField'
      description: >-
        The `reportCustomFields` parameter is used when experiences are
        associated with a credit decisioning report.


        Designate up to 5 custom fields that you'd like associated with the
        report when it's generated. Every custom field consists of three
        variables: `label`, `value`, and `shown`. The `shown` variable is true
        or false.

        * `true`: (default) display the custom field in the PDF report

        * `false`: don't display the custom field in the PDF report


        For an experience that generates multiple reports, the
        `reportCustomFields` parameter gets passed to all reports.
    IncomeStreamConfidenceMinimum:
      type: integer
      description: >-
        Designate a minimum confidence level threshold to include income streams
        with a specified confidence level or higher. For example, designate a
        `incomeStreamConfidenceMinimum` of 50 to see all income streams with a
        confidence level of 50 or higher.
      format: int32
      example: 50
    ConnectFromDate:
      type: integer
      description: >-
        The `fromDate` parameter is used when experiences are associated with a
        credit decisioning report and any other reports with transaction data.
        The value is in epoch time and must be 10 digits. Example: 1494449017.
        If it's greater than 10 digits, then the `fromDate` is set to the credit
        decisioning report's default `fromDate`.


        For an experience that generates multiple reports, the `fromDate` gets
        passed to the reports that support it.


        Note: this field isn't used if you're only collecting transaction data
        without a report.
      format: int64
      example: 1607450357
    InstitutionSettings:
      type: object
      description: >-
        Advanced options for configuration of which institutions to display in.
        See [Institution
        Settings](https://developer.mastercard.com/open-banking-au/documentation/connect/connect-institutions-settings/).
    ConnectUrl:
      description: A Connect URL object
      required:
        - link
      type: object
      properties:
        link:
          $ref: '#/components/schemas/ConnectLink'
    ConnectLink:
      type: string
      description: A generated Connect URL
      example: 'https://connect2.openbanking.mastercard.com.au?customerId=1892&origin=url&partnerId=2445583947972&signature=54bfc4fdb002921f6066195bfbfd997934618caef61139cf8809bf6a4daa53e9&timestamp=1656519867660&ttl=1656527067660&webhookContentType=application%2Fjson'
    CustomerUsername:
      type: string
      description: >-
        The customer's username, assigned by the partner (a unique identifier),
        following these rules: minimum 6 characters maximum 255 characters any
        mix of uppercase, lowercase, numeric, and non-alphabet special
        characters ! @ . # $ % & * _ – + the use of email in this field is
        discouraged it is recommended to use a unique non-email identifier. Use
        of special characters may result in an error (e.g. í, ü, etc.)
      example: customerusername1
    FirstName:
      type: string
      description: First name(s) / given name(s)
      example: John
    LastName:
      type: string
      description: Last name(s) / surname(s)
      example: Smith
    Address:
      type: string
      description: A street address
      example: 100 Arthur Street
    AddressLine1:
      type: string
      description: An address line 1
      example: 100 Arthur Street
    AddressLine2:
      type: string
      description: An address line 2
      example: 'Level 8'
    AddressLine3:
      type: string
      description: An address line 3
      example: GA 30518
    City:
      type: string
      description: A city
      example: Sydney
    State:
      type: string
      description: A state
      example: NSW
    Country:
      type: string
      description: A country code
      example: AU
    ZipCode:
      type: string
      description: A postal code
      example: '2060'
    PhoneNumber:
      type: string
      description: A phone number
      example: '61-3-1234-1234'
    ConsumerPhoneNumber:
      type: string
      description: A consumer phone number
      example: '1234567890'
    Suffix:
      type: string
      description: A person suffix
      example: Mr
    MiddleName:
      type: string
      description: Middle Name(s)
      example: L
    ApplicationId:
      type: string
      minLength: 36
      maxLength: 36
      description:
        A unique identifier of an application. Use this ID to create a customer
        once approved and to obtain details associated with this application
        within the Mastercard Open Banking system.
      example: dfef2c10-c49f-440e-8605-4ab3c3d7ef15
    PreAppId:
      type: string
      description:
        Identifier to track the application registration from the "App
        Registration" and "Get App Registration Status" endpoints
      example: '2581'
    ApplicationName:
      type: string
      description: |-
        The name of the application as the one to be used to register the
        software on the CDR portal. When naming your application, please
        consider these rules:
        - The name should be unique within Mastercard system.
        - For the Sandbox, it is recommended to register your application with adding a prefix to the name.
          In such way the proper application name can be used for the Production environment.
        - For the Production, if your organisation is acting as a representative under Mastercard as principal,
          this name should correspond to the legal name of your organisation.
      minLength: 1
      maxLength: 255
      example: Awesome Budget App
    UnixDate:
      type: integer
      description:
        'A date in Unix epoch time (in seconds). See also: [How do I handle
        Dates and
        Times?](https://developer.mastercard.com/open-banking-au/documentation/support/).'
      format: int64
      example: 1607450357
    ReportCreatedDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/). Note: If
        the report is retrieved on a day other than the day it was generated, on
        the header of the PDF version of the report there will be a "Retrieved
        Date" populated.
      format: int64
      example: 1607450357
    StringUnixDate:
      type: string
      description:
        'A date in Unix epoch time (in seconds). See also: [How do I handle
        Dates and
        Times?](https://developer.mastercard.com/open-banking-au/documentation/support/).'
      format: int64
      example: '1607450357'
    MoreResultsAvailable:
      type: boolean
      description: If `true`, you can fetch the next page of results.
      example: true
    DisplayingResults:
      type: integer
      minimum: 1
      maximum: 2147483647
      description: The number of results returned.
      example: 2
    FoundResults:
      type: integer
      minimum: 1
      maximum: 2147483647
      description: The total number of results matching search criteria.
      example: 200
    Currency:
      type: string
      description: A currency code
      example: 'AUD'
    CustomerType:
      type: string
      description:
        The type of Mastercard Open Banking customer ("active" or "testing" or
        "" for all types)
      example: active
    NewCustomer:
      description: A new customer to be enrolled
      required:
        - username
        - email
        - firstName
        - lastName
        - phone
        - applicationId
      type: object
      allOf:
        - $ref: '#/components/schemas/NewTestingCustomer'
        - type: object
          properties:
            applicationId:
              $ref: '#/components/schemas/ApplicationId'
    NewTestingCustomer:
      description: A new testing customer to be enrolled
      required:
        - username
        - email
        - firstName
        - lastName
        - phone
      type: object
      properties:
        username:
          $ref: '#/components/schemas/CustomerUsername'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        email:
          $ref: '#/components/schemas/EmailAddress'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
    CustomerUpdate:
      description: Represent an update to customer fields
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        email:
          $ref: '#/components/schemas/EmailAddress'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
    CreatedCustomer:
      description: A new customer that was just enrolled
      required:
        - id
        - username
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        username:
          $ref: '#/components/schemas/CustomerUsername'
        createdDate:
          $ref: '#/components/schemas/StringUnixDate'
    Customer:
      description: A Mastercard Open Banking customer record
      required:
        - id
        - username
        - type
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        username:
          $ref: '#/components/schemas/CustomerUsername'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        type:
          $ref: '#/components/schemas/CustomerType'
        createdDate:
          $ref: '#/components/schemas/StringUnixDate'
        lastModifiedDate:
          $ref: '#/components/schemas/StringUnixDate'
        email:
          $ref: '#/components/schemas/EmailAddress'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
    CustomerWithAppData:
      description:
        A Mastercard Open Banking customer record with application info
      required:
        - id
        - username
        - firstName
        - lastName
        - type
        - createdDate
        - applicationId
        - applicationName
      allOf:
        - $ref: '#/components/schemas/Customer'
        - type: object
          properties:
            applicationId:
              $ref: '#/components/schemas/ApplicationId'
            applicationName:
              $ref: '#/components/schemas/ApplicationName'
    Customers:
      description: A list of Mastercard Open Banking customers
      required:
        - found
        - displaying
        - moreAvailable
        - customers
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: A list of customer records
    NewConsumer:
      description: A new consumer to be created
      required:
        - firstName
        - lastName
        - phone
        - email
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        phone:
          $ref: '#/components/schemas/ConsumerPhoneNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        suffix:
          $ref: '#/components/schemas/Suffix'
    ConsumerUpdate:
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        phone:
          $ref: '#/components/schemas/ConsumerPhoneNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        suffix:
          $ref: '#/components/schemas/Suffix'
    CreatedConsumer:
      description: A consumer that was just created
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
    Consumer:
      description: A Mastercard Open Banking consumer record
      required:
        - id
        - firstName
        - lastName
        - customerId
        - phone
        - birthday
        - email
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        suffix:
          $ref: '#/components/schemas/Suffix'
    AccountOwnerHolder:
      required:
        - holders
      type: object
      properties:
        holders:
          type: array
          items:
            $ref: '#/components/schemas/AccountOwner'
          description: List of account owners.
    AccountOwner:
      required:
        - ownerName
        - addresses
      type: object
      properties:
        ownerName:
          $ref: '#/components/schemas/AccountOwnerName'
        firstName:
          $ref: '#/components/schemas/FirstName'
        middleName:
          $ref: '#/components/schemas/MiddleName'
        lastName:
          $ref: '#/components/schemas/LastName'
        suffix:
          $ref: '#/components/schemas/Suffix'
        addresses:
          $ref: '#/components/schemas/AccountOwnerAddresses'
        emails:
          $ref: '#/components/schemas/AccountOwnerEmails'
        phones:
          $ref: '#/components/schemas/AccountOwnerPhones'
      description: Owner of a customer account
    AccountOwnerPhone:
      description: Consumer phone
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountOwnerPhoneType'
        country:
          $ref: '#/components/schemas/Country'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
    AccountOwnerPhones:
      description: List of phones
      type: array
      items:
        $ref: '#/components/schemas/AccountOwnerPhone'
    AccountOwnerEmail:
      description: Account owner email
      type: object
      properties:
        isPrimary:
          $ref: '#/components/schemas/AccountOwnerEmailPrimary'
        email:
          $ref: '#/components/schemas/EmailAddress'
        emailType:
          $ref: '#/components/schemas/AccountOwnerEmailType'
    AccountOwnerEmails:
      description: List of emails
      type: array
      items:
        $ref: '#/components/schemas/AccountOwnerEmail'
    AccountOwnerAddress:
      description: Account owner address
      type: object
      properties:
        ownerAddress:
          $ref: '#/components/schemas/Address'
        type:
          $ref: '#/components/schemas/AddressType'
        line1:
          $ref: '#/components/schemas/AddressLine1'
        line2:
          $ref: '#/components/schemas/AddressLine2'
        line3:
          $ref: '#/components/schemas/AddressLine3'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        postalCode:
          $ref: '#/components/schemas/ZipCode'
        country:
          $ref: '#/components/schemas/Country'
    AccountOwnerAddresses:
      description: List of Addresses
      type: array
      items:
        $ref: '#/components/schemas/AccountOwnerAddress'
    AddressType:
      type: string
      description: |-
        The type of address location:
        * "Business"
        * "Home"
        * "Mailing"
      example: Home
    AccountOwnerName:
      type: string
      description: The name of the account owner
      example: John Smith
    AccountOwnerPhoneType:
      type: string
      description: Account owner phone type
      example: Business
    AccountOwnerEmailPrimary:
      type: boolean
      description: Is primary email
      example: true
    AccountOwnerEmailType:
      type: string
      description: Account owner email type
      example: Personal
    CustomerAccounts:
      description: A list of customer accounts
      required:
        - accounts
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAccount'
          description: List of customer accounts
    CustomerAccount:
      description:
        An account represents a bank account such as a transaction or savings
        that the customer has added via the Connect interface.
      required:
        - id
        - number
        - accountNumberDisplay
        - balance
        - type
        - status
        - customerId
        - institutionId
        - balanceDate
        - createdDate
        - currency
        - institutionLoginId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        number:
          type: string
          deprecated: true
          description: The account number from the institution
          example: '2000004444'
        accountNumberDisplay:
          type: string
          description: >-
            The account number from a financial institution in truncated format:

            * Last four digits: "1234"

            * Last four digits with suffix: "1234-9"

            * Full value for string accounts: "john@gmail.com"
          example: '1234-9'
        realAccountNumberLast4:
          $ref: '#/components/schemas/AccountNumberLast4'
        name:
          type: string
          description: The account name from the institution
          example: Super Transaction
        balance:
          type: number
          description: The cleared balance of the account as-of balanceDate
          example: 401.26
        type:
          $ref: '#/components/schemas/AccountType'
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        status:
          type: string
          description: >-
            "pending" during account discovery, always "active" following
            successful account activation
          example: active
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionId:
          $ref: '#/components/schemas/InstitutionId'
        balanceDate:
          # A timestamp showing when the balance was captured
          $ref: '#/components/schemas/UnixDate'
        aggregationSuccessDate:
          # A timestamp showing the last successful aggregation of the account.
          # This will not be present until you have run your first aggregation for the account.
          $ref: '#/components/schemas/UnixDate'
        aggregationAttemptDate:
          #  A timestamp showing the last aggregation attempt
          # This will not be present until you have run your first aggregation for the account.
          $ref: '#/components/schemas/UnixDate'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        lastUpdatedDate:
          $ref: '#/components/schemas/UnixDate'
        currency:
          $ref: '#/components/schemas/Currency'
        lastTransactionDate:
          $ref: '#/components/schemas/UnixDate'
        institutionLoginId:
          $ref: '#/components/schemas/NumericInstitutionLoginId'
        detail:
          $ref: '#/components/schemas/CustomerAccountDetail'
        financialinstitutionAccountStatus:
          description: Current account status with the financial institution
          type: string
          example: 'OPEN'
        accountNickname:
          description: Nickname for account
          type: string
          example: Checking
        marketSegment:
          description: Market segment of account
          type: string
          example: personal
    CustomerAccountDetail:
      description: >-
        Additional customer account details. Not all data points will return for
        each account type. You can see the account type that each data point
        will return for in descriptions. The data point are also subject to
        availability by the institution.
      type: object
      properties:
        availableBalanceAmount:
          type: number
          description: >-
            (Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan)  The available
            balance (typically the current balance with adjustments for any
            pending transactions)
          example: 5678.78
        openDate:
          # Checking/Savings/CD/MoneyMarket
          $ref: '#/components/schemas/UnixDate'
        maturityDate:
          # Checking/Savings/CD/MoneyMarket
          $ref: '#/components/schemas/UnixDate'
        interestRate:
          type: string
          description: >-
            (Credit Card/Line Of Credit) and (Mortgage/Loan) The account's
            current interest rate
          example: '15.789'
        creditAvailableAmount:
          type: number
          description: >-
            (Credit Card/Line Of Credit) The available credit (typically the
            credit limit minus the current balance)
          example: 3000
        creditMaxAmount:
          type: number
          description: (Credit Card/Line Of Credit) The account's credit limit
          example: 7000
        paymentMinAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due
          example: 456.78
        paymentDueDate:
          # Credit Card/Line Of Credit
          $ref: '#/components/schemas/UnixDate'
        initialMlAmount:
          type: number
          description: (Mortgage/Loan) Original loan amount
          example: 65000
        initialMlDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        nextPaymentDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        loanPaymentFreq:
          type: string
          description: '(Mortgage/Loan) Frequency of payments (monthly, etc.)'
          example: monthly
        loanPaymentType:
          type: string
          description: (Mortgage/Loan) Type of loan payment
          example: principle
    AppStatuses:
      description: >-
        The response for the "Get App Registration Status" endpoint which
        returns an array of status objects
      required:
        - totalRecords
        - totalPages
        - pageNumber
        - numberOfRecordsPerPage
        - applications
      type: object
      properties:
        totalRecords:
          type: integer
          description: The total number of results
          format: int64
          example: 50
        totalPages:
          type: integer
          description: The total number of pages
          format: int64
          example: 5
        pageNumber:
          type: integer
          description: The current page number
          format: int64
          example: 2
        numberOfRecordsPerPage:
          type: integer
          description: The number of results per page
          format: int64
          example: 10
        applications:
          description: A list of applications with their statuses
          type: array
          items:
            $ref: '#/components/schemas/AppStatus'
    AppRegistrationStatus:
      description: >-
        The status of an application registration request.


        Possible values are:
         * Active: When application registration is approved and application
        is registered with financial institutions.
         * Pending: When application registration is in-progress.
         * Deleted: When application is deleted from the system.
         * Rejected: When application gets rejected. If it is rejected there
        will be a note with the rejected reason.
      minLength: 1
      maxLength: 10
      type: string
      example: Pending
    AppStatus:
      description: Registration status details for the application
      required:
        - partnerId
        - preAppId
        - appName
        - submittedDate
        - modifiedDate
        - status
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        preAppId:
          $ref: '#/components/schemas/PreAppId'
        note:
          type: string
          description:
            A note on the registration. Typically used to indicate reasons for
            rejected apps.
          example: Approved
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        appName:
          $ref: '#/components/schemas/ApplicationName'
        submittedDate:
          $ref: '#/components/schemas/UnixDate'
        modifiedDate:
          $ref: '#/components/schemas/UnixDate'
        status:
          $ref: '#/components/schemas/AppRegistrationStatus'
        scopes:
          type: string
          description: Indicates scopes of data accessible to the app
          example: Account Info
        institutionDetails:
          type: array
          items:
            $ref: '#/components/schemas/AppFinancialInstitutionStatus'
          description:
            A list of the registration status for each FI for the application
    AppFinancialInstitutionStatus:
      description: >-
        The registration status fields for each specific OAuth financial
        institution
      required:
        - id
        - decryptionKeyActivated
        - createdDate
        - lastModifiedDate
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        abbrvName:
          type: string
          description: The application's abbreviated name
          example: VAEJ
        logoUrl:
          type: string
          description: An URL to a logo file
          example: >-
            https://prod-direct-integration-client.s3.us-west-2.amazonaws.com/976521f99-7b36-4b3b-a3e0-faff9545836d/102224/90x90.png
        decryptionKeyActivated:
          type: boolean
          description:
            Status of decryption keys for financial institution app registration
          example: false
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        lastModifiedDate:
          $ref: '#/components/schemas/UnixDate'
        status:
          type: boolean
          description: '`false` indicates registration is still pending'
          example: true
    Branding:
      type: object
      properties:
        logo:
          type: string
          description: >-
            File path of the institution's logo. For white backgrounds designed
            at 375 x 72, has built in spacing around it to normalize brand
            sizing.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/logo.svg
        alternateLogo:
          type: string
          description: >-
            File path of the institution's alternate logo. For colored
            backgrounds designed at 375 x 72 has built in spacing around it to
            normalize brand sizing.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/alternateLogo.svg
        icon:
          type: string
          description: >-
            File path of the institution's icon. For search results designed at
            40 x 40.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/icon.svg
        primaryColor:
          type: string
          description: Hex code for the institution's primary color
          example: '#0167AE'
        tile:
          type: string
          description: >-
            File path of institution name logo. For popular banks designed at
            160 x 72.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/tile.svg
      description:
        All assets are SVGs so can be slightly resized without any issues.
    BrandingWrapper:
      required:
        - branding
      type: object
      properties:
        branding:
          $ref: '#/components/schemas/Branding'
    InstitutionAddress:
      type: object
      description: The address of a financial institution
      properties:
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        country:
          $ref: '#/components/schemas/Country'
        postalCode:
          $ref: '#/components/schemas/ZipCode'
        addressLine1:
          $ref: '#/components/schemas/AddressLine1'
        addressLine2:
          $ref: '#/components/schemas/AddressLine2'
    Institutions:
      description:
        A list of Mastercard Open Banking financial institutions from the "Get
        Institutions" API
      required:
        - found
        - displaying
        - moreAvailable
        - createdDate
        - institutions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        institutions:
          description: A list of institutions
          maxItems: 1000
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Institution'
    InstitutionWrapper:
      type: object
      required:
        - institution
      properties:
        institution:
          $ref: '#/components/schemas/Institution'
    Institution:
      description: A financial institution
      required:
        - id
        - transAgg
        - ach
        - stateAgg
        - voi
        - voa
        - aha
        - availBalance
        - accountOwner
        - oauthEnabled
        - currency
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        name:
          $ref: '#/components/schemas/InstitutionName'
        transAgg:
          $ref: '#/components/schemas/InstitutionTransAgg'
        ach:
          $ref: '#/components/schemas/InstitutionAch'
        stateAgg:
          $ref: '#/components/schemas/InstitutionStateAgg'
        voi:
          $ref: '#/components/schemas/InstitutionVoi'
        voa:
          $ref: '#/components/schemas/InstitutionVoa'
        aha:
          $ref: '#/components/schemas/InstitutionAha'
        availBalance:
          $ref: '#/components/schemas/InstitutionAvailableBalance'
        accountOwner:
          $ref: '#/components/schemas/InstitutionAccountOwner'
        loanPaymentDetails:
          $ref: '#/components/schemas/LoanPaymentDetails'
        studentLoanData:
          $ref: '#/components/schemas/StudentLoanData'
        accountTypeDescription:
          type: string
          description: >-
            Values: Banking, Investments, Credit Cards/Accounts, Workplace
            Retirement, Mortgages and Loans, Insurance
          example: 'Workplace Retirement'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        urlHomeApp:
          type: string
          description: The URL of the institution's primary home page
          example: 'https://www.example.com/home'
        urlLogonApp:
          type: string
          description: The URL of the institution's login page
          example: 'https://www.example.com/login'
        oauthEnabled:
          $ref: '#/components/schemas/OAuthEnabled'
        urlForgotPassword:
          type: string
          description: Institution's forgot password page
          example: 'https://www.example.com/forgotPassword.do'
        urlOnlineRegistration:
          type: string
          description: Institution's signup page
          example: 'https://www.example.com/signup'
        class:
          type: string
          description: Institution's class
          example: 'retirement'
        specialText:
          type: string
          description: Special instructions given to customers for login
          example:
            'Please enter your Principal Financial - Retirement (Personal)
            Username and Password.'
        specialInstructions:
          type: array
          items:
            type: string
          description: >-
            Instructions given to the customer before they are sent to the
            institution website to login for OAuth institutions.


            Note: this helps the customer to provide the proper permission for
            data needed for the application.
          example:
            - Account details
            - Balances and transactions
            - Personal and account ownership info
        address:
          $ref: '#/components/schemas/InstitutionAddress'
        currency:
          $ref: '#/components/schemas/Currency'
        email:
          $ref: '#/components/schemas/EmailAddress'
        status:
          type: string
          description:
            "Institution's status: online, offline, maintenance, testing"
          example: online
        newInstitutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
          # The new id for the financial institution's ID you are replacing. This is the same as the `oauthInstitutionId`
          # field, which will eventually be replaced by this field.
        branding:
          $ref: '#/components/schemas/Branding'
        oauthInstitutionId:
          # The new ID for the OAuth institution's ID you are replacing.
          $ref: '#/components/schemas/NumericInstitutionId'
        timeZone:
          type: string
          description: The time zone of the institution.
          example: 'Australia/ACT'
    CertifiedInstitutions:
      description:
        A list of Mastercard Open Banking financial institutions from the "Get
        Certified Institutions" API
      required:
        - found
        - displaying
        - moreAvailable
        - requestedDate
        - institutions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        requestedDate:
          $ref: '#/components/schemas/UnixDate'
        institutions:
          description: A list of institutions
          maxItems: 1000
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/CertifiedInstitution'
    CertifiedInstitution:
      required:
        - name
        - id
        - ach
        - stateAgg
        - voi
        - voa
        - aha
        - availBalance
        - accountOwner
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        rssd:
          $ref: '#/components/schemas/Rssd'
        name:
          $ref: '#/components/schemas/InstitutionName'
        transAgg:
          $ref: '#/components/schemas/InstitutionTransAgg'
        stateAgg:
          $ref: '#/components/schemas/InstitutionStateAgg'
        ach:
          $ref: '#/components/schemas/InstitutionAch'
        voi:
          $ref: '#/components/schemas/InstitutionVoi'
        voa:
          $ref: '#/components/schemas/InstitutionVoa'
        aha:
          $ref: '#/components/schemas/InstitutionAha'
        availBalance:
          $ref: '#/components/schemas/InstitutionAvailableBalance'
        accountOwner:
          $ref: '#/components/schemas/InstitutionAccountOwner'
        oauthEnabled:
          $ref: '#/components/schemas/OAuthEnabled'
        loanPaymentDetails:
          $ref: '#/components/schemas/LoanPaymentDetails'
        studentLoanData:
          $ref: '#/components/schemas/StudentLoanData'
        childInstitutions:
          description: An array of child financial institutions
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ChildInstitution'
    ChildInstitution:
      required:
        - rssd
        - parentRSSD
        - name
        - institutionId
      type: object
      properties:
        rssd:
          $ref: '#/components/schemas/Rssd'
        parentRSSD:
          $ref: '#/components/schemas/Rssd'
        name:
          $ref: '#/components/schemas/InstitutionName'
        institutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
    AccountDetail:
      type: object
      properties:
        interestMarginBalance:
          type: number
          description: >-
            Only available for investment accounts. Net interest earned after
            deducting interest paid out
          example: -50000
        availableCashBalance:
          type: number
          description: >-
            Only available for investment accounts. Amount available for cash
            withdrawal
          example: 1500
        vestedBalance:
          type: number
          description:
            Only available for investment accounts. Vested amount in account
          example: 300000
        currentLoanBalance:
          type: number
          description:
            Only available for investment accounts. Current loan balance
          example: 0
        availableBalanceAmount:
          type: number
          description: The available balance for the account
          example: 1000
    BaseReportData:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        customerType:
          $ref: '#/components/schemas/CustomerType'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        title:
          $ref: '#/components/schemas/ReportTitle'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        errors:
          description: In case errors occurred during the report generation
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    ReportData:
      required:
        - id
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/ReportConstraintsOut'
    ReportDataNonCRA:
      required:
        - id
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/ReportConstraintsOut'
    NetMonthly:
      required:
        - month
        - net
      type: object
      properties:
        month:
          # Timestamp for the first day of this month
          $ref: '#/components/schemas/UnixDate'
        net:
          type: number
          description:
            Total income during the given month, across all income streams
          example: 2004.77
    Transaction:
      required:
        - id
        - amount
        - accountId
        - customerId
        - status
        - description
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        amount:
          type: number
          description: >-
            The total amount of the transaction. Transactions for deposits are
            positive values, withdrawals and debits are negative values.
          example: 3678.9
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        status:
          type: string
          description:
            One of active, pending, or shadow (see [What are pending and shadow
            transactions?](https://developer.mastercard.com/open-banking-au/documentation/support/))
          example: active
        description:
          type: string
          description: >-
            The description of the transaction, as provided by the institution
            (often known as payee). In the event that this field is left blank
            by the institution, Mastercard Open Banking will pass a value of "No
            description provided by institution". All other values are provided
            by the institution.
          example: MAD SCIENCE RESEARCH PR PAYMENT
        postedDate:
          $ref: '#/components/schemas/UnixDate'
        transactionDate:
          $ref: '#/components/schemas/UnixDate'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        type:
          $ref: '#/components/schemas/TransactionType'
        institutionTransactionId:
          type: string
          description:
            The unique identifier given by the FI for each transaction
          example: '0000000000'
        currencySymbol:
          type: string
          description: >-
            If the foreign amount value is present then this is the currency
            code of that foreign amount
          example: USD
        lastUpdatedDate:
          $ref: '#/components/schemas/UnixDate'
    ReportSummaries:
      required:
        - reports
      type: object
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummary'
          description: Data pertaining to each report
    ReportIncomeStream:
      required:
        - id
        - status
        - estimateInclusion
        - confidence
        - cadence
        - netMonthly
        - netAnnual
        - estimatedGrossAnnual
        - projectedGrossAnnual
        - averageMonthlyIncomeNet
        - transactions
      type: object
      properties:
        id:
          type: string
          description: Mastercard's income stream ID
          example: dens28i3vsch-voi1
        name:
          type: string
          description: >-
            A human-readable name based on the normalizedPayee name of the
            transactions for this income stream
          example: none
        status:
          $ref: '#/components/schemas/Status'
        estimateInclusion:
          $ref: '#/components/schemas/EstimateInclusion'
        confidence:
          type: integer
          description:
            Level of confidence that the deposit stream represents income
          format: int32
          example: 85
        cadence:
          $ref: '#/components/schemas/CadenceDetails'
        netMonthly:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NetMonthly'
          description: >-
            A list of net monthly records. One instance for each complete
            calendar month in the report
        netAnnual:
          type: number
          description:
            Sum of all values in netMonthlyIncome over the previous 12 months
          example: 110475.7
        estimatedGrossAnnual:
          type: number
          description: >-
            Before-tax gross annual income (estimated from netAnnual) across all
            income stream in the past 12 months
          example: 100000
        averageMonthlyIncomeNet:
          type: number
          description: Monthly average amount over the previous 24 months
          example: 9206.31
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of transaction records
        incomeStreamMonths:
          description: 'TODO'
          type: number
          example: 24
    Birthday:
      type: object
      properties:
        year:
          type: integer
          description: The birthday 4-digit year
          format: int32
          example: 1989
        month:
          type: integer
          description: The birthday 2-digit month (1 is January)
          format: int32
          example: 8
        dayOfMonth:
          type: integer
          description: The birthday 2-digit day-of-month
          format: int32
          example: 13
      description: A birth date
    CadenceDetails:
      type: object
      properties:
        startDate:
          # Date of the first deposit transaction
          $ref: '#/components/schemas/UnixDate'
        stopDate:
          # Date of the final deposit transaction (omitted if status is active)
          $ref: '#/components/schemas/UnixDate'
        days:
          type: integer
          description: Number of days between the recurring deposits
          format: int32
          example: 14
    Report:
      description: A report
      type: object
      required:
        - id
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/CashFlowReport'
        - $ref: '#/components/schemas/VOAReport'
        - $ref: '#/components/schemas/VOIReport'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/ReportConstraintsOut'
    BaseReportAck:
      description: Properties shared by all generated reports
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        customerType:
          $ref: '#/components/schemas/CustomerType'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        createdDate:
          $ref: '#/components/schemas/ReportCreatedDate'
        title:
          $ref: '#/components/schemas/ReportTitle'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        errors:
          description: In case errors occurred during the report generation
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    VOAReport:
      description: A VOA report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAck'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/UnixDate'
            endDate:
              $ref: '#/components/schemas/UnixDate'
            days:
              type: integer
              description: Number of days covered by the report
              example: 180
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 180 days'
              example: true
            consolidatedAvailableBalance:
              type: number
              description:
                The sum of available balance for all of the accounts included in
                the report
              example: 1929.57
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: A list of institution records
            balanceSummary:
              description: A list of assets
              type: array
              items:
                $ref: '#/components/schemas/AssetSummary'
    VOIReport:
      description: A VOI report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAck'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/UnixDate'
            endDate:
              $ref: '#/components/schemas/UnixDate'
            days:
              type: integer
              description: Number of days covered by the report
              format: int64
              example: 200
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 180 days'
              example: true
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: A list of institution records
            income:
              description: 'Income details'
              type: array
              items:
                $ref: '#/components/schemas/ReportIncomeStreamSummary'
    ReportIncomeStreamSummary:
      required:
        - confidenceType
        - netMonthly
        - incomeEstimate
      type: object
      properties:
        confidenceType:
          $ref: '#/components/schemas/EstimateInclusion'
        netMonthly:
          type: array
          items:
            $ref: '#/components/schemas/NetMonthly'
          description: >-
            A list of net monthly records. One instance for each complete
            calendar month in the report.
        incomeEstimate:
          $ref: '#/components/schemas/ReportIncomeEstimate'
    ReportIncomeEstimate:
      required:
        - netAnnual
        - estimatedGrossAnnual
      type: object
      properties:
        netAnnual:
          type: number
          description:
            Sum of all values in `netMonthlyIncome` over the previous 12 months
          example: 1000.12
        projectedNetAnnual:
          type: number
          description: >-
            Projected net income over the next 12 months, across all income
            streams, based on `netAnnualIncome`
          example: 1500.23
        estimatedGrossAnnual:
          type: number
          description: >-
            Before-tax gross annual income (estimated from `netAnnual`) across
            all income stream in the past 12 months
          example: 2000.12
        projectedGrossAnnual:
          type: number
          description: >-
            Projected gross income over the next 12 months, across all active
            income streams, based on `projectedNetAnnual`
          example: 2500.23
    CashFlowReport:
      description: A Cash Flow report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAck'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/UnixDate'
            endDate:
              $ref: '#/components/schemas/UnixDate'
            days:
              type: integer
              description: Number of days covered by the report
              example: 730
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 365 days'
              example: true
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description:
                A list of institution records, including information about the
                individual accounts used in this report
            cashFlowBalanceSummary:
              $ref: '#/components/schemas/CashFlowCashFlowBalanceSummary'
            cashFlowCreditSummary:
              $ref: '#/components/schemas/CashFlowCashFlowCreditSummary'
            cashFlowDebitSummary:
              $ref: '#/components/schemas/CashFlowCashFlowDebitSummary'
            cashFlowCharacteristicsSummary:
              $ref: '#/components/schemas/CashFlowCashFlowCharacteristicsSummary'
            possibleLoanDeposits:
              type: array
              items:
                $ref: '#/components/schemas/CashFlowPossibleLoanDeposits'
              description: A possible loan deposits record
    CashFlowPossibleLoanDeposits:
      required:
        - institutions
      type: object
      properties:
        institutions:
          description: 'A list of loan deposit institutions'
          type: array
          items:
            $ref: '#/components/schemas/CashFlowPossibleLoanDepositsInstitutions'
    CashFlowPossibleLoanDepositsInstitutions:
      required:
        - id
        - name
        - urlHomeApp
        - accounts
      type: object
      properties:
        id:
          type: string
          description: Finicity institution ID
          example: '102105'
        name:
          type: string
          description: Finicity institution name
          example: FinBank Profiles
        urlHomeApp:
          type: string
          description: The URL of the Financial Institution
          example: http://www.finbank.com
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowPossibleLoanDepositsAccount'
          description: A list of account records
    CashFlowPossibleLoanDepositsAccount:
      required:
        - id
        - ownerName
        - ownerAddress
        - number
        - type
        - aggregationStatusCode
        - currentBalance
        - balanceDate
        - transactions
      type: object
      properties:
        id:
          type: string
          description: Finicity account ID
          example: '6681984'
        ownerName:
          type: string
          description:
            The name(s) of the account owner(s), retrieved from the institution.
          example: PATRICK & LORRAINE PURCHASER
        ownerAddress:
          type: string
          description:
            The mailing address of the account owner, retrieved from the
            institution.
          example: 7195 BELMONT ST. PARLIN, NJ 08859
        name:
          type: string
          description: The account name from the institution
          example: Checking
        number:
          type: string
          description: The account number from the institution (obfuscated)
          example: XX1111
        type:
          type: string
          description:
            'CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit
            card` / `CD` / `MM` / `investment`...)'
          example: checking
        aggregationStatusCode:
          type: string
          description:
            The status of the most recent aggregation attempt for this account
            (non-zero means the account was not accessed successfully for this
            report, and additional fields for this account may not be reliable)
          example: '0'
        currentBalance:
          type: number
          description: The cleared balance of the account as-of `balanceDate`
          example: 100000
        availableBalance:
          type: number
          description: Available balance
          example: 1000
        balanceDate:
          type: integer
          description: A timestamp showing when the `balance` was captured
          format: int64
          example: 1614880526
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
    ReportTransaction:
      required:
        - id
        - postedDate
        - description
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        amount:
          type: number
          description:
            The total amount of the transaction. Transactions for deposits are
            positive values, withdrawals and debits are negative values.
          example: 100
        postedDate:
          type: integer
          description:
            A timestamp showing when the transaction was posted or cleared by
            the institution
          format: int64
          example: 1571313600
        description:
          type: string
          description:
            The description of the transaction, as provided by the institution
            (often known as `payee`). In the event that this field is left blank
            by the institution, Finicity will pass a value of "No description
            provided by institution". All other values are provided by the
            institution.
          example: ATM CHECK DEPOSIT mm/dd
        memo:
          type: string
          description:
            The memo field of the transaction, as provided by the institution.
            The institution must provide either a description, a memo, or both.
            It is recommended to concatenate the two fields into a single value.
          example: Some St Somewhere City State
        normalizedPayee:
          type: string
          description:
            A normalized payee, derived from the transaction's `description` and
            `memo` fields
          example: T-Mobile
        institutionTransactionId:
          type: string
          description:
            The unique identifier given by the FI for each transaction
          example: '0000000000'
        category:
          type: string
          description:
            One of the values from Categories (assigned based on the payee name)
          example: Income
        type:
          type: string
          description: One of the values from transaction types
          example: debit
        securityType:
          type: string
          description: The type of investment security (VOA only)
          example: 'Stock'
        symbol:
          type: string
          description: Investment symbol (VOA only)
          example: 'DAL'
        commission:
          description: A commission amount
          type: number
          example: 0
    CashFlowMonthlyCashFlowDebitSummaries:
      required:
        - month
        - numberOfDebits
        - totalDebitsAmount
        - largestDebit
        - numberOfDebitsLessTransfers
        - totalDebitsAmountLessTransfers
        - averageDebitAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        numberOfDebits:
          type: string
          description: Number of Debits by month across all accounts
          example: '1500'
        totalDebitsAmount:
          type: number
          description: Total Amount of Debits by month across all accounts
          example: -12345.46
        largestDebit:
          type: number
          description: Largest Debit by month
          example: -20000
        numberOfDebitsLessTransfers:
          type: string
          description: Number of Debits by month (less transfers)
          example: '5'
        totalDebitsAmountLessTransfers:
          type: number
          description: Total amount of debits by month (less transfers)
          example: -2000
        averageDebitAmount:
          type: number
          description: The average debit amount
          example: 500
    CashFlowCashFlowDebitSummary:
      required:
        - monthlyCashFlowDebitSummaries
        - twelveMonthDebitTotal
        - twelveMonthDebitTotalLessTransfers
        - sixMonthDebitTotal
        - sixMonthDebitTotalLessTransfers
        - twoMonthDebitTotal
        - twoMonthDebitTotalLessTransfers
      type: object
      properties:
        monthlyCashFlowDebitSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowDebitSummaries'
          description: List of attributes for each month
        twelveMonthDebitTotal:
          type: number
          description:
            Sum of all monthly debit transactions for each month by account
          example: -1200
        twelveMonthDebitTotalLessTransfers:
          type: number
          description:
            Sum of all monthly debit transactions without transfers for the
            account
          example: -1000
        sixMonthDebitTotal:
          type: number
          description: Six month sum of all debit transactions by account
          example: -750
        sixMonthDebitTotalLessTransfers:
          type: number
          description:
            Six month sum of all debit transactions without transfers for the
            account
          example: -500
        twoMonthDebitTotal:
          type: number
          description: Two month sum of all debit transactions by account
          example: -150
        twoMonthDebitTotalLessTransfers:
          type: number
          description:
            Two month sum of all debit transactions without transfers for the
            account
          example: -100
    CashFlowMonthlyCashFlowCharacteristicSummaries:
      required:
        - month
        - totalCreditsLessTotalDebits
        - totalCreditsLessTotalDebitsLessTransfers
        - averageTransactionAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        totalCreditsLessTotalDebits:
          type: number
          description: Total Credits - Total Debits by month across all accounts
          example: 15000
        totalCreditsLessTotalDebitsLessTransfers:
          type: number
          description:
            Total Credits - Total Debits by month (Without Transfers) across all
            accounts
          example: 11000
        averageTransactionAmount:
          type: number
          description: Average transaction amount across all accounts
          example: 10
    CashFlowCashFlowCharacteristicsSummary:
      required:
        - twelveMonthTotalNet
        - twelveMonthTotalNetLessTransfers
        - sixMonthAverageTotalCreditsLessTotalDebits
        - sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers
        - twoMonthAverageTotalCreditsLessTotalDebits
        - twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers
      type: object
      properties:
        monthlyCashFlowCharacteristicsSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowCharacteristicSummaries'
          description: List of attributes for each month
        averageMonthlyNet:
          type: number
          description: Average monthly net amount
          example: 1250
        averageMonthlyNetLessTransfers:
          type: number
          description: Average monthly net less transfers
          example: 1000
        twelveMonthTotalNet:
          type: number
          description:
            Sum of all monthly (Total Credits - Total Debits) each month by the
            account
          example: 12500
        twelveMonthTotalNetLessTransfers:
          type: number
          description:
            Sum of all monthly (Total Credits - Total Debits) without transfers
            by the account
          example: 12400
        sixMonthAverageTotalCreditsLessTotalDebits:
          type: number
          description:
            6 Month Average (Total Credits - Total Debits) across all accounts
          example: 55555
        sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers:
          type: number
          description:
            6 Month Average (Total Credits - Total Debits) - (Without Transfers)
            across all accounts
          example: 55555
        twoMonthAverageTotalCreditsLessTotalDebits:
          type: number
          description:
            2 Month Average (Total Credits - Total Debits) across all accounts
          example: 55555
        twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers:
          type: number
          description:
            2 Month Average (Total Credits - Total Debits) - (Without Transfers)
            across all accounts
          example: 55555
    CashFlowCashFlowCreditSummary:
      required:
        - monthlyCashFlowCreditSummaries
        - twelveMonthCreditTotal
        - twelveMonthCreditTotalLessTransfers
        - sixMonthCreditTotal
        - sixMonthCreditTotalLessTransfers
        - twoMonthCreditTotal
        - twoMonthCreditTotalLessTransfers
      type: object
      properties:
        monthlyCashFlowCreditSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowCreditSummaries'
          description: List of attributes for each month
        twelveMonthCreditTotal:
          type: number
          description:
            Sum of all credit transactions for each month for all accounts
          example: 1200
        twelveMonthCreditTotalLessTransfers:
          type: number
          description:
            Sum of all monthly credit transactions without transfers for all
            accounts
          example: 1000
        sixMonthCreditTotal:
          type: number
          description: Six month sum of all credit transactions
          example: 750
        sixMonthCreditTotalLessTransfers:
          type: number
          description:
            Six month sum of all monthly credit transactions without transfers
            for all accounts
          example: 500
        twoMonthCreditTotal:
          type: number
          description: Two month sum of all credit transactions
          example: 150
        twoMonthCreditTotalLessTransfers:
          type: number
          description:
            Two month sum of all monthly credit transactions without transfers
            for all accounts
          example: 100
    CashFlowCashFlowBalanceSummary:
      required:
        - monthlyCashFlowBalanceSummaries
        - minDailyBalance
        - maxDailyBalance
        - twelveMonthAverageDailyBalance
        - sixMonthAverageDailyBalance
        - twoMonthAverageDailyBalance
        - twelveMonthStandardDeviationOfDailyBalance
        - sixMonthStandardDeviationOfDailyBalance
        - twoMonthStandardDeviationOfDailyBalance
        - numberOfDaysNegativeBalance
        - numberOfDaysPositiveBalance
      type: object
      properties:
        monthlyCashFlowBalanceSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowBalanceSummaries'
          description: List of attributes for each month
        minDailyBalance:
          type: number
          description:
            Min Daily Balance across entire transaction history  for all
            accounts
          example: 3479.39
        maxDailyBalance:
          type: number
          description:
            Max Daily Balance across entire transaction history for all accounts
          example: 3479.39
        twelveMonthAverageDailyBalance:
          type: number
          description:
            Average Daily Balance across twelve months for all accounts
          example: 3479.39
        sixMonthAverageDailyBalance:
          type: number
          description: Average Daily Balance across six months for all accounts
          example: 3479.39
        twoMonthAverageDailyBalance:
          type: number
          description: Average Daily Balance across two months for all accounts
          example: 3479.39
        twelveMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across twelve months for all
            accounts
          example: '20'
        sixMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across six months for all
            accounts
          example: '20'
        twoMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across two months for all
            accounts
          example: '20'
        numberOfDaysNegativeBalance:
          type: string
          description:
            Number of Days Negative Balance over entire transaction history for
            all accounts
          example: '6'
        numberOfDaysPositiveBalance:
          type: string
          description:
            Number of Days Positive Balance over entire transaction history for
            all accounts
          example: '11'
    CashFlowMonthlyCashFlowBalanceSummaries:
      required:
        - month
        - minDailyBalance
        - maxDailyBalance
        - averageDailyBalance
        - standardDeviationOfDailyBalance
        - numberOfDaysNegativeBalance
        - numberOfDaysPositiveBalance
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        minDailyBalance:
          type: number
          description: Min Daily Balance for each month for all accounts
          example: 3479.39
        maxDailyBalance:
          type: number
          description: Max Daily Balance for each month for all accounts
          example: 3479.39
        averageDailyBalance:
          type: number
          description: Average Daily Balance for each month for all accounts
          example: 3479.39
        standardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance for each month for all accounts
          example: '20.45454545'
        numberOfDaysNegativeBalance:
          type: string
          description:
            Number of Days Negative Balance for each month for all accounts
          example: '6'
        numberOfDaysPositiveBalance:
          type: string
          description:
            Number of Days Positive Balance for each month for all accounts
          example: '0'
    CashFlowMonthlyCashFlowCreditSummaries:
      required:
        - month
        - numberOfCredits
        - totalCreditsAmount
        - largestCredit
        - numberOfCreditsLessTransfers
        - totalCreditsAmountLessTransfers
        - averageCreditAmount
        - estimatedNumberOfLoanDeposits
        - estimatedLoanDepositAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        numberOfCredits:
          type: string
          description: Number of credits by month across all accounts
          example: '57'
        totalCreditsAmount:
          type: number
          description: Total amount of credits by month across all accounts
          example: 3479.39
        largestCredit:
          type: number
          description: Largest credit by month across all accounts
          example: 3000.49
        numberOfCreditsLessTransfers:
          type: string
          description:
            Number of credits by month (less transfers) across all accounts
          example: '5'
        totalCreditsAmountLessTransfers:
          type: number
          description:
            Total amount of credits by month (less transfers) across all
            accounts
          example: 25.46
        averageCreditAmount:
          type: number
          description: The average credit amount
          example: 500
        estimatedNumberOfLoanDeposits:
          type: string
          description: The estimated number of loan deposits by month
          example: '0'
        estimatedLoanDepositAmount:
          type: number
          description: The estimated loan deposit amount by month
          example: 0
    ReportInstitution:
      required:
        - id
        - accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        name:
          $ref: '#/components/schemas/InstitutionName'
        urlHomeApp:
          type: string
          description: The URL of the institution's primary home page
          example: 'https://finbank.prod.fini.city/CCBankImageMFA/login.jsp'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/ReportAccount'
          description: An array of accounts
    ReportSummary:
      required:
        - id
        - requesterName
        - requestId
        - type
        - status
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        constraints:
          $ref: '#/components/schemas/ReportConstraintsOut'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
    ReportAccount:
      required:
        - id
        - number
        - ownerName
        - ownerAddress
        - type
        - aggregationStatusCode
        - transactions
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        number:
          type: string
          description: >-
            The account number from the institution (all digits except the last
            four are obfuscated)
          example: '1111'
        ownerName:
          type: string
          description: >-
            The name(s) of the account owner(s). This field is optional. If no
            owner information is available, this field will not appear in the
            report.
          example: JOHN DOE
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner(s). This field is optional.
            If no owner information is available, this field will not appear in
            the report.
          example: '924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        type:
          $ref: '#/components/schemas/AccountType'
        currency:
          $ref: '#/components/schemas/Currency'
        availableBalance:
          type: number
          description: The available balance for the account
          example: 501.24
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        balance:
          type: number
          description: The cleared balance of the account as-of balance date
          example: 501.24
        balanceDate:
          # Date for when the balance was captured
          $ref: '#/components/schemas/UnixDate'
        averageMonthlyBalance:
          type: number
          description: The average monthly balance of this account
          example: 501.02
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: An array of transactions belonging to the account
        asset:
          $ref: '#/components/schemas/AssetSummary'
        details:
          $ref: '#/components/schemas/AccountDetail'
        incomeStream:
          $ref: '#/components/schemas/ReportIncomeStream'
        incomeStreams:
          type: array
          items:
            $ref: '#/components/schemas/ReportIncomeStream'
          description: A list of income stream records
        totNumberInsufficientFundsFeeDebitTxAccount:
          type: integer
          description:
            The count for the total number of insufficient funds transactions,
            based on the `fromDate` of the report.
          format: int64
          example: 0
        totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount:
          type: integer
          description:
            The count for the total number of insufficient funds transactions
            for the last two months, based on the `fromDate` of the report.
          format: int64
          example: 0
        totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount:
          type: integer
          description:
            The count for the total number of insufficient funds transactions
            for the last six months, based on the `fromDate` of the report.
          format: int64
          example: 0
        totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount:
          type: integer
          description:
            The number of days since the most recent insufficient funds
            transaction, based on the `fromDate` of the report.
          format: int64
          example: 120
        currentBalance:
          description: The cleared balance of the account as-of `balanceDate`
          type: number
          example: 726.38
        beginningBalance:
          type: number
          description:
            The beginning balance of the account per the time period of the
            report
          example: 726.33
        miscDeposits:
          maxItems: 100
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of miscellaneous deposits
    Status:
      description: 'Possible values: "ACTIVE", "INACTIVE"'
      type: string
      example: ACTIVE
    TransactionType:
      type: string
      description: |-
        If provided by the institution, the following values may be returned in
        the field of a record:
          * directDebit
          * fee
          * interestCharged
          * interestPaid
          * other
          * payment
          * transferIncoming
          * transferOutgoing
      example: atm
    ReportStatus:
      type: string
      description:
        A report generation status ("inProgress", "success", "failure")
      example: inProgress
    ReportType:
      description: |
        A report type. Possible values:
        * voi
        * voa
        * cfrb
      type: string
      example: voa
    PaymentInstructions:
      description: A list of payment instruction
      required:
        - paymentInstruction
      type: object
      properties:
        paymentInstruction:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInstruction'
          description: List of payment instructions
    PaymentInstruction:
      description: It represents the required fields to perform money transfers.
      required:
        - type
        - accountNumber
        - descriptors
      type: object
      properties:
        type:
          type: string
          description: Type of money transfer supported in a given market
          example: 'moneyTransfer'
        accountNumber:
          type: string
          description: >-
            The account number for initiating money transfers for this account.
          example: '6456456456546'
        descriptors:
          type: array
          items:
            $ref: '#/components/schemas/Descriptor'
          description: List of money transfer descriptors
    Descriptor:
      description:
        It contains type:value pair about bank's identification number used for
        the money transfers.
      required:
        - type
        - value
      type: object
      properties:
        type:
          type: string
          description: Bank identification number in a given market
          example: 'binNumber'
        value:
          type: string
          description: Value of the bank identification number
          example: '033-547'
    AggregationStatusCode:
      type: integer
      description:
        The status of the most recent aggregation attempt (see [Aggregation
        Status
        Codes](https://developer.mastercard.com/open-banking-au/documentation/codes-and-formats/#common-aggregation-status-codes)).
        Won't be present until you have run your first aggregation for the
        account.
    AccountType:
      type: string
      description: >-
        The enumeration of supported account types.

        * `transactionAndSavings`

        * `creditCard`

        * `homeloan`

        * `investmentAccount`

        * `awardSaver`

        * `commonwealthBankBusinessAccount`

        * `commonwealthBankStepPayAccount`
      example: transaction
    Transactions:
      description: A list of transactions
      required:
        - found
        - displaying
        - moreAvailable
        - fromDate
        - toDate
        - sort
        - transactions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        toDate:
          $ref: '#/components/schemas/UnixDate'
        sort:
          type: string
          description:
            Value of the sort request parameter that generated this response
          example: desc
        transactions:
          description: The array of transactions
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    EstimateInclusion:
      description: 'Possible values: "HIGH", "MODERATE", "LOW", "NO"'
      type: string
      example: HIGH
    AvailableBalance:
      required:
        - id
        - availableBalance
        - availableBalanceDate
        - clearedBalance
        - clearedBalanceDate
        - currency
        - aggregationStatusCode
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericCustomerId'
        realAccountNumberLast4:
          $ref: '#/components/schemas/AccountNumberLast4'
        availableBalance:
          type: number
          description: The available balance of the account
          example: 173.47
        availableBalanceDate:
          $ref: '#/components/schemas/UnixDate'
        clearedBalance:
          type: number
          description: >-
            The cleared balance of the account. Also referred as posted balance,
            current balance, ledger balance
          example: 222.25
        clearedBalanceDate:
          $ref: '#/components/schemas/UnixDate'
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        currency:
          # The currency of the account
          $ref: '#/components/schemas/Currency'
    AssetSummary:
      required:
        - currentBalance
        - twoMonthAverage
        - beginningBalance
      type: object
      properties:
        type:
          type: string
          description: transaction / savings / moneyMarket / cd / investment
          example: transaction
        availableBalance:
          type: number
          description: The available balance for the account
          example: 1000
        currentBalance:
          type: number
          description: Current balance of the account
          example: 1000
        twoMonthAverage:
          type: number
          description: Two month average daily balance of the account
          example: -1865.96
        sixMonthAverage:
          type: number
          description: Six month average daily balance of the account
          example: -7616.01
        beginningBalance:
          type: number
          description:
            Beginning balance of account per the time period in the report
          example: -17795.6
        currency:
          $ref: '#/components/schemas/Currency'
    ConsentReceiptId:
      type: string
      description:
        'A unique identifier of the consent given for a particular purpose'
      example: '123e4567-e89b-42d3-a456-556642440000'
    OAuthEnabled:
      type: boolean
      description: '`true`: The institution is an OAuth connection'
      example: true
    LoanPaymentDetails:
      type: boolean
      example: false
    StudentLoanData:
      type: boolean
      description: |-
        "true": The institution is certified for the Student Loan Data product

        "false": The institution is decertified for the Student Loan Data product
      example: true
    NewSubscription:
      type: object
      required:
        - url
        - notificationType
      properties:
        url:
          $ref: '#/components/schemas/Url'
        notificationType:
          $ref: '#/components/schemas/NotificationType'
    SubscriptionUrl:
      type: object
      required:
        - url
      properties:
        url:
          $ref: '#/components/schemas/Url'
    Url:
      type: string
      description:
        The URL on which partner wants to receive webhook notifications.
      example: 'https://www.mydomain.com/notification'
    NotificationType:
      type: string
      description: >-
        The type of webhook notification for which partner wants to subscribe.
        Possible values are,

        1. CONSENT - notification specific to data sharing consent when there is
        change in data sharing consent.

        2. CONNECT - notification specific to connect journey when customer
        interacts with the application.


        Note:- At the moment partner can subscribe for only CONSENT webhook
        notification.
      example: CONSENT
    Subscription:
      required:
        - id
        - url
        - notificationType
        - signingKey
        - createdDate
      properties:
        id:
          $ref: '#/components/schemas/WebhookSubscriptionId'
        url:
          $ref: '#/components/schemas/Url'
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        signingKey:
          type: string
          description: >-
            The signing key used by partner to verify signature of payload.


            Mastercard will create signature of payload and append as header
            parameter during webhook notification events. Partner can generate
            signature with given signing key and payload and compare it with
            header parameter. If the two are equal then the request is valid,
            otherwise, it is spoofed.
          example: >-
            zg4U0v1IvTzFEHIXzJMxPHnfUwWZAMVpXrUuNuL9IvZI0QzkDdwp39IAKuNOFxOVqCOgHLMS1Zpe4ZL40NX83aJkqI6v0Ez5B7BLBtvr7Ag11kPH3uG1taTeOV0CTyI4LOg7ohSHn0DqaRu2aBq26KI90nYe0CecTCzzhu4yMXL43JV8YfydAexNdkzfg8tY44MlhBPUh2neHW2EFTT2ja4s4Ul10JgID03un8WBSrIm2adHw3QYJB4jk4k1e
        createdDate:
          $ref: '#/components/schemas/ISODateTime'
        lastUpdatedDate:
          $ref: '#/components/schemas/ISODateTime'
    Subscriptions:
      type: object
      required:
        - found
        - displaying
        - moreAvailable
        - subscriptions
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionSummary'
          description: A list of notification subscriptions
    SubscriptionSummary:
      required:
        - id
        - url
        - notificationType
        - status
        - createdDate
      properties:
        id:
          $ref: '#/components/schemas/WebhookSubscriptionId'
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        status:
          $ref: '#/components/schemas/WebhookSubscriptionStatus'
        url:
          $ref: '#/components/schemas/Url'
        createdDate:
          $ref: '#/components/schemas/ISODateTime'
        lastUpdatedDate:
          $ref: '#/components/schemas/ISODateTime'
    WebhookSubscriptionId:
      type: string
      format: uuid
      description:
        A Mastercard Open Banking webhook notification subscription ID.
      example: 58afc6e5-7293-4d4a-b6de-005269f37992
    ISODateTime:
      type: string
      format: 'date-time'
      description: >-
        A date and time in ISO 8601 format (YYYY-MM-DDThh:mm:ssTZD). See also:
        [How do I handle Dates and
        Times?](https://developer.mastercard.com/open-banking-au/documentation/support/).
      example: '2022-07-16T06:06:20Z'
    WebhookSubscriptionStatus:
      type: string
      description: >-
        Status of the webhook notification subscription.


        For Ex. ACTIVE, INACTIVE
      example: 'ACTIVE'
    App:
      type: object
      required:
        - applicationId
        - status
        - appName
        - legalEntityName
        - policyUrl
        - dataComplaintsEmailAddress
        - softwareId
        - orgId
        - jwksUrl
        - dataRecipientRevocationUrl
        - dataRecipientBaseUrl
        - dataRecipientRedirectUrl
        - copyrightLogo
        - businessName
        - fromEmail
        - createdDate
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        status:
          type: string
          minLength: 1
          maxLength: 10
          description: |-
            Possible values are:
            * Active: When application registration is approved and application is registered with financial institutions.
            * Pending: When application registration is in-progress.
            * Deleted: When application is deleted from the system.
            * Rejected: When application is rejected. Refer 'note' to know more on why application is rejected.
          example: Active
        appName:
          type: string
          minLength: 1
          maxLength: 255
          description:
            A name of the application submitted during application registration.
          example: Mvelopes
        appDescription:
          type: string
          description:
            A short description of the application submitted during application
            registration.
          example: The app that makes your budgeting experience awesome
          minLength: 1
          maxLength: 255
        legalEntityName:
          type: string
          description:
            A unique legal name of the organization registered with ACCC's CDR
            registry. This name will be displayed in the consent as an entity
            obtaining data.
          example: Budget Maker
          minLength: 1
          maxLength: 50
        appUrl:
          type: string
          description:
            A URL to a website explaining the service value proposition of the
            product/application.
          example: https://myBudgetMaker.com
          minLength: 1
          maxLength: 255
        policyUrl:
          type: string
          description:
            URL to a document outlining the registered entity's Consumer Data
            Right policy as provided on the CDR portal.
          example: 'https://myBudgetMakerCdrPolicy.com'
          minLength: 1
          maxLength: 255
        dataComplaintsEmailAddress:
          type: string
          description:
            An email address a customer may use for data complaints queries.
          example: datasupport@budgetmaker.com
          minLength: 1
          maxLength: 255
        image:
          type: string
          description: >-
            A base64-encoded SVG logo of the application to be used during
            application registration.
          example: >-
            'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
          minLength: 1
          maxLength: 50550
        softwareId:
          type: string
          description:
            A unique identifier (GUID) of a registered Software Product, as
            provided by CDR.
          example: afa07bc3-7edf-4690-8fea-829e2613671f
          minLength: 36
          maxLength: 36
        orgId:
          type: string
          description:
            A unique identified for the Accredited Data Recipient Brand that the
            software product is associated with, as provided by CDR.
          example: a2a1a8d6-f2c2-4d98-906d-6e74e08ad1d8
          minLength: 36
          maxLength: 36
        jwksUrl:
          type: string
          minLength: 1
          maxLength: 255
          format: uri
          description:
            URL to JSON Web Key (JWK) Set [RFC7517] document containing the
            public keys.  If your organization is accredited, use this URL to
            request submitting product details for CTS and Production on the CDR
            portal.
          example: 'https://www.budget-application.com.au/jwks/de901e6a-4b7c-4d98-906d-6e74e08ad1d8'
        dataRecipientRevocationUrl:
          type: string
          minLength: 1
          maxLength: 255
          format: uri
          description:
            Accredited Data Recipient's (ADR) consent revocation endpoint. If
            your organization is accredited, use this URL to request submitting
            product details for CTS and Production on the CDR portal.
          example: 'https://www.budget-application.com.au/arrangements/revoke'
        dataRecipientBaseUrl:
          type: string
          minLength: 1
          maxLength: 255
          format: uri
          description:
            Base URL of the Data Recipient. If your organization is accredited,
            use this URL to request submitting product details for CTS and
            Production on the CDR portal.
          example: 'https://www.budget-application.com.au'
        dataRecipientRedirectUrl:
          type: string
          minLength: 1
          maxLength: 255
          format: uri
          description:
            URL for redirect-based flows. If your organization is accredited,
            use this URL to request submitting product details for CTS and
            Production on the CDR portal.
          example: 'https://www.budget-application.com.au/oauth/v1/callback'
        copyrightLogo:
          type: string
          description:
            A base64-encoded SVG logo of the organization to be used to sign the
            consent notification emails to the clients.
          minLength: 1
          maxLength: 50550
          example: >-
            'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
        businessName:
          type: string
          description:
            A name of the organization used in business to sign the consent
            notification emails to the clients.
          minLength: 1
          maxLength: 50
          example: 'Budget Application'
          default: 'Mastercard'

        fromEmail:
          type: string
          description:
            An email address used to send the consent notification emails to the
            clients.
          minLength: 1
          maxLength: 255
          format: email
          example: 'no-reply@mybudget.com'
        replyToEmail:
          type: string
          description:
            A reply email address used in consent notification emails to the
            client.
          minLength: 0
          maxLength: 255
          format: email
          example: 'reply@mybudget.com'
        note:
          type: string
          minLength: 1
          maxLength: 100
          description:
            A note to provide additional information about the status of the
            application request, e.g., a reason for the registration request
            being rejected.
          example: Approved
        createdDate:
          type: string
          minLength: 1
          maxLength: 255
          description:
            Date and time of when the application registration request is
            submitted to the Mastercard Open Banking system by using POST
            /applications API call. The value is in ISO 8601 format.
          example: 2020-06-02T06:00:00Z
        modifiedDate:
          type: string
          minLength: 1
          maxLength: 255
          description:
            Date and time of when the application registration request changed
            within the Mastercard Open Banking system. The value is in ISO 8601
            format.
          example: 2020-06-02T06:00:00Z
        submittedDate:
          type: string
          minLength: 1
          maxLength: 255
          description:
            Date and time of when the application request is approved within the
            Mastercard Open Banking system. The value is in ISO 8601 format.
          example: 2020-06-02T06:00:00Z
      description: 'Applications details'
    Applications:
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        applications:
          type: array
          description: 'List of the registered application request details.'
          items:
            $ref: '#/components/schemas/App'
    OauthInstitutions:
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        institutions:
          type: array
          description: 'List of institution details for an application'
          example:
            - institutionId: 170716
              status: true
              createdDate: 2020-07-30T16:11:23Z
              modifiedDate: 2020-07-30T16:11:23Z
          items:
            $ref: '#/components/schemas/FinancialInstitution'
    FinancialInstitution:
      type: object
      required:
        - institutionId
        - isAppRegistered
      properties:
        institutionId:
          type: integer
          minimum: 1
          maximum: 2147483647
          description:
            A unique identifier of the financial institution within the
            Mastercard Open Banking system.
          format: int64
          example: 170716
        isAppRegistered:
          type: boolean
          minLength: 1
          maxLength: 10
          description:
            Denotes whether the application has been registered with the
            financial institution yet to access the financial data.
          example: true
        createdDate:
          type: string
          minLength: 1
          maxLength: 255
          description:
            Date and time of when the application became registered with the
            financial institution. The value is in ISO 8601 format.
          example: 2020-07-30T16:11:23Z
        modifiedDate:
          type: string
          minLength: 1
          maxLength: 255
          description:
            Date and time of when last time the application registered with the
            financial institution was amended. The value is in ISO 8601 format.
          example: 2020-07-30T16:11:23Z
    Application:
      required:
        - appName
      type: object
      properties:
        appName:
          $ref: '#/components/schemas/ApplicationName'
        appDescription:
          type: string
          description:
            A short description of the application as to be provided on the CDR
            portal during software registration. This field is required when
            moving to production if your organization is acting as a
            representative under Mastercard as principal.
          example: The app that makes your budgeting experience awesome
          minLength: 1
          maxLength: 255
        legalEntityName:
          type: string
          description:
            A unique legal name of the organization registered with ACCC's CDR
            registry. This name will be displayed in the consent as an entity
            obtaining data. This field is required when moving to production if
            your organization is an Accredited Data Recipient (Principal) and
            will be included in the consent. This value has no impact within the
            Sandbox environment.
          example: Budget Maker
          minLength: 1
          maxLength: 50
        appUrl:
          type: string
          description:
            A URL to a website explaining the service value proposition of the
            product/application. This field is required when moving to
            production if your organization is acting as a representative under
            Mastercard as principal. This value has no impact within the Sandbox
            environment.
          example: https://myBudgetMaker.com
          minLength: 1
          maxLength: 255
        policyUrl:
          type: string
          description:
            URL to a document outlining the registered entity's Consumer Data
            Right policy as provided on the CDR portal. This field is required
            when moving to production if your organization is an Accredited Data
            Recipient (Principal) and will be included in the consent.
          example: 'https://myBudgetMakerCdrPolicy.com'
          minLength: 1
          maxLength: 255
        dataComplaintsEmailAddress:
          type: string
          description:
            An email address a customer may use for data complaints queries.
            This field is required when moving to production if your
            organization is an Accredited Data Recipient (Principal) and will be
            included in the consent.
          example: datasupport@budgetmaker.com
          minLength: 1
          maxLength: 255
        softwareId:
          type: string
          description:
            A unique identifier (GUID) of a registered Software Product, as
            provided by CDR. This field is required when moving to production if
            your organization is an Accredited Data Recipient (Principal) and
            will be used to establish a trusted connection with registered Data
            Holders (DH). This value has no impact within the Sandbox
            environment.
          example: afa07bc3-7edf-4690-8fea-829e2613671f
          minLength: 36
          maxLength: 36
        orgId:
          type: string
          description:
            A unique identified for the Accredited Data Recipient Brand that the
            software product is associated with, as provided by CDR. This field
            is required when moving to production if your organization is an
            Accredited Data Recipient (Principal) and will be used to establish
            a trusted connection with registered Data Holders (DH). This value
            has no impact within the Sandbox environment.
          example: a2a1a8d6-f2c2-4d98-906d-6e74e08ad1d8
          minLength: 36
          maxLength: 36
        copyrightLogo:
          type: string
          description: |-
            A base64-encoded SVG logo of the organization to be used to sign the
            consent notification emails to the clients. This field is required
            when moving to production if your organization is an Accredited Data
            Recipient (Principal). This value has no impact if your organization
            is acting as a representative under Mastercard as principal.

            **The value must meet these requirements to be accepted:**
            - format: SVG
            - size: < 50KB
          minLength: 1
          maxLength: 50550
          example: >-
            'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
        businessName:
          type: string
          description:
            A name of the organization to be used in business to sign the
            consent notification emails to the clients. This field is required
            when moving to production if your organization is an Accredited Data
            Recipient (Principal). This value has no impact if your organization
            is acting as a representative under Mastercard as principal.
          minLength: 1
          maxLength: 50
          example: 'Budget Application'
          default: 'Mastercard'
        fromEmail:
          type: string
          description:
            An email address to be used to send the consent notification emails
            to the clients. This field is required when moving to production if
            your organization is an Accredited Data Recipient (Principal) and
            requires to set up DNS accordingly to allow Mastercard to send email
            using this address. This value has no impact if your organization is
            acting as a representative under Mastercard as principal.
          format: email
          minLength: 1
          maxLength: 255
          example: 'no-reply@mybudget.com'
        replyToEmail:
          type: string
          description:
            A reply email address to be used in consent notification emails to
            the client. This value has no impact within the Sandbox environment.
          minLength: 1
          maxLength: 255
          format: email
          example: 'reply@mybudget.com'
        image:
          type: string
          description: |-
            A base64-encoded SVG logo of the application to be used during
            registration  on the CDR portal as well as in the Connect flow
            screens. This field is required when moving to production and has no
            impact within  the Sandbox environment.

            **The value must meet these requirements to be accepted:**
            - format: SVG
            - size: < 50KB
          example: >-
            'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
          minLength: 1
          maxLength: 50550
    RegisteredApplication:
      required:
        - applicationId
        - status
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        status:
          $ref: '#/components/schemas/RegistrationStatus'
    RegistrationStatus:
      description: >-
        The status of an application registration request.


        Possible values are:
         * Active: When application registration gets approved and application
        is registered with financial institutions.
         * Pending: When application registration is in-progress.
         * Deleted: When application is deleted from the system.
         * Rejected: When application gets rejected. If it is rejected there
        will be a note with the rejected reason.
      minLength: 1
      maxLength: 10
      type: string
      example: Pending
